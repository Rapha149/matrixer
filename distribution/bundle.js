/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./source/main2.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./source/main2.js":
/*!*************************!*\
  !*** ./source/main2.js ***!
  \*************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var mathEngine_imports__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mathEngine/imports */ \"./source/mathEngine/imports.js\");\n\nconsole.log(\"Hi, what's up?\");\nvar exp1 = \"5*3+(5*4)+((5*4)+2*3*(4+6+8))+7\";\nconsole.log(new mathEngine_imports__WEBPACK_IMPORTED_MODULE_0__[\"UserIoHandler\"]().processCalculation(Field.R, exp1));\n\n//# sourceURL=webpack:///./source/main2.js?");

/***/ }),

/***/ "./source/mathEngine/Constants.js":
/*!****************************************!*\
  !*** ./source/mathEngine/Constants.js ***!
  \****************************************/
/*! exports provided: Operators, Constants */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Operators\", function() { return Operators; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Constants\", function() { return Constants; });\n/**\n * This file contains several global constants that are used by the math engine.\n *\n * @author David Augustat\n * */\nvar Operators = {\n  ADD: '+',\n  SUBTRACT: '-',\n  MULTIPLY: '*',\n  EXPONENTIATE: '^',\n  DIVIDE: '/',\n  TERMINAL: '€',\n  ROW_REDUCE: 'rowreduce',\n  DETERMINANT: 'det',\n  ABSOLUTE_VALUE: 'abs'\n};\nvar Constants = {\n  listOfAllOperators: [Operators.ADD, Operators.SUBTRACT, Operators.MULTIPLY, Operators.EXPONENTIATE, Operators.DIVIDE, Operators.ROW_REDUCE, Operators.DETERMINANT, Operators.ABSOLUTE_VALUE],\n  infixOperators: [Operators.ADD, Operators.SUBTRACT, Operators.MULTIPLY, Operators.DIVIDE, Operators.EXPONENTIATE],\n  functionOperators: [Operators.ROW_REDUCE, Operators.DETERMINANT, Operators.ABSOLUTE_VALUE],\n  generalCharacters: [',', ';', '(', ')', '{', '}', '[', ']'],\n  realNumberCharacters: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.'],\n  realNumberCharactersWithoutDot: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n  primeFieldNumberCharacters: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n  f4NumberCharacters: ['0', '1', 'a'],\n  f8NumberCharacters: ['0', '1', 'b', 'bs'],\n  f9NumberCharacters: ['0', '1', 'j']\n};\n\n//# sourceURL=webpack:///./source/mathEngine/Constants.js?");

/***/ }),

/***/ "./source/mathEngine/Exceptions.js":
/*!*****************************************!*\
  !*** ./source/mathEngine/Exceptions.js ***!
  \*****************************************/
/*! exports provided: Exceptions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Exceptions\", function() { return Exceptions; });\n/**\n * This file contains all exceptions that can be thrown by the math engine.\n *\n * Every exception object contains an English as well as a German text describing the error. The error strings are\n * suited for being displayed to the user in case of an error.\n *\n * @author David Augustat\n * */\n\n/*\nTemplate exception:\n\nconst Exception = {\n    englishMessage: \"\",\n    germanMessage: \"\"\n};\n*/\nvar Exceptions = {\n  InvalidBracketsException: {\n    englishMessage: \"An invalid order or quantity of brackets has been detected.\",\n    germanMessage: \"Eine falsche Anordnung oder Anzahl von Klammern wurde erkannt.\"\n  },\n  InvalidNumbersOrCharactersException: {\n    englishMessage: \"Invalid characters or numbers has been detected.\",\n    germanMessage: \"Ungültige Zeichen oder Zahlen wurden erkannt.\"\n  },\n  OperatorsAtInvalidPositionException: {\n    englishMessage: \"Operators at disallowed positions have been detected.\",\n    germanMessage: \"Es wurden Operatoren an ungültigen Stellen erkannt.\"\n  },\n  FunctionOperatorNotFollowedByBracketException: {\n    englishMessage: \"Function operators must always be followed by round brackets. E.g. rowreduce({1,2;3,4})\",\n    germanMessage: \"Auf Funktionsoperatoren müssen immer runde Klammern folgen. z.B. rowreduce({1,2;3,4})\"\n  },\n  InvalidMatrixException: {\n    englishMessage: \"Invalid matrix has been detected.\",\n    germanMessage: \"Eine ungültige Matrix wurde gefunden.\"\n  },\n  InvalidVectorException: {\n    englishMessage: \"Invalid vector has been detected.\",\n    germanMessage: \"Ein ungültiger Vektor wurde gefunden.\"\n  },\n  CommaOrSemicolonOutsideOfMatrixAndVectorException: {\n    englishMessage: \"Commas or semicolons may only be used inside of matrices or vectors\",\n    germanMessage: \"Kommas oder Semikola dürfen nur innerhalb von Matrizen und Vektoren genutzt werden.\"\n  },\n  InvalidNumberException: {\n    englishMessage: \"An invalid number for the selected field has been detected.\",\n    germanMessage: \"Eine auf dem gewählten Körper ungültige Zahl wurde gefunden.\"\n  },\n  MethodNotImplementedException: {\n    englishMessage: \"A method used by this expression is not implemented. This is an unwanted behaviour. \" + \"Please contact the developer.\",\n    germanMessage: \"Eine Methode, die bei der Berechnung benötigt wird, ist nicht implementiert. Dies ist ein \" + \"Fehler. Bitte kontaktiere den Entwickler.\"\n  },\n  AdditionOfMatrixToNumberException: {\n    englishMessage: \"Adding a matrix to a number is not allowed.\",\n    germanMessage: \"Es ist nicht erlaubt, eine Matrix zu einer Zahl hinzuzuaddieren.\"\n  },\n  AdditionOfVectorToNumberException: {\n    englishMessage: \"Adding a vector to a number is not allowed.\",\n    germanMessage: \"Es ist nicht erlaubt, einen Vektor zu einer Zahl hinzuzuaddieren.\"\n  },\n  SubtractionOfMatrixFromNumberException: {\n    englishMessage: \"Subtracting a matrix from a number is not allowed.\",\n    germanMessage: \"Es ist nicht erlaubt, eine Matrix von einer Zahl zu subtrahieren.\"\n  },\n  SubtractionOfVectorFromNumberException: {\n    englishMessage: \"Subtracting a vector from a number is not allowed.\",\n    germanMessage: \"Es ist nicht erlaubt, einen Vektor von einer Zahl zu subtrahieren.\"\n  },\n  DivisionByMatrixException: {\n    englishMessage: \"Dividing by a matrix is not allowed.\",\n    germanMessage: \"Man darf nicht durch eine Matrix teilen.\"\n  },\n  DivisionByVectorException: {\n    englishMessage: \"Dividing by a vector is not allowed.\",\n    germanMessage: \"Man darf nicht durch einen Vektor teilen.\"\n  },\n  InvalidExponentException: {\n    englishMessage: \"Invalid exponent detected. Exponents must always be a real number, even when another field \" + \"than R is used.\",\n    germanMessage: \"Ein ungültiger Exponent wurde erkannt. Exponenten müssen immer reelle Zahlen sein, egal in \" + \"welchem Körper man rechnet.\"\n  },\n  AdditionOfNumberToMatrixException: {\n    englishMessage: \"It is not allowed to add a number to a matrix.\",\n    germanMessage: \"Man kann keine Zahl zu einer Matrix hinzuaddieren.\"\n  },\n  MultiplicationOfMatricesWithInvalidDimensionsException: {\n    englishMessage: \"Matrices can only be multiplied if the column count of the first matrix is equal to the row \" + \"count of the second matrix.\",\n    germanMessage: \"Matrizen können nur miteinander multipliziert werden, wenn die Spaltenanzahl der ersten Matrix\" + \"gleich der Zeilenanzahl der zweiten Matrix ist.\"\n  },\n  MultiplicationOfMatrixWithVectorWithInvalidDimensionsException: {\n    englishMessage: \"A matrix can only be multiplied by a vector if the column count of the matrix is equal to the\" + \"row count of the vector.\",\n    germanMessage: \"Eine Matrix kann nur mit einem Vektor multipliziert werden, wenn die Spaltenanzahl der Matrix\" + \"gleich der Zeilenanzahl des Vektors ist.\"\n  },\n  SubtractionOfNumberFromMatrixException: {\n    englishMessage: \"It is not allowed to subtract a number from a matrix.\",\n    germanMessage: \"Man kann keine Zahl von einer Matrix subtrahieren.\"\n  },\n  AdditionOrSubtractionOfMatricesWithDifferentDimensionsException: {\n    englishMessage: \"Adding or subtracting two matrices with different amounts of rows or columns is not allowed.\",\n    germanMessage: \"Man kann nicht zwei Matrizen mit unterschiedlichen Zeilen- oder Spaltenanzahlen addieren oder \" + \"subtrahieren.\"\n  },\n  AdditionOfVectorToMatrixException: {\n    englishMessage: \"Adding a vector to a matrix is not allowed.\",\n    germanMessage: \"Man kann nicht einen Vektor zu einer Matrix hinzuaddieren.\"\n  },\n  UnequalAmountOfMatrixColumnsException: {\n    englishMessage: \"A matrix with an unequal amount of columns per row has been detected.\",\n    germanMessage: \"Es wurde eine Matrix mit ungleichen Spaltenanzahlen pro Zeile gefunden.\"\n  },\n  DivisionByZeroException: {\n    englishMessage: \"Division by Zero is not allowed.\",\n    germanMessage: \"Man darf nicht durch Null teilen.\"\n  },\n  MultiplicationOfVectorByMatrixException: {\n    englishMessage: \"It is not allowed to multiply a vector by a matrix. Only the other way around \" + \"(matrix * vector) is allowed.\",\n    germanMessage: \"Man kann nicht einen Vektor mit einer Matrix multiplizieren. Nur die umgekehrte Richtung \" + \"(Matrix * Vektor) ist erlaubt.\"\n  },\n  MultiplicationOfVectorsWrongDimensionsException: {\n    englishMessage: \"Vectors can only be multiplied if they have the same number of rows.\",\n    germanMessage: \"Vektoren können nur miteinander multipliziert werden, wenn sie die gleiche Anzahl an Zeilen haben.\"\n  },\n  AdditionOfNumberToVectorException: {\n    englishMessage: \"It is not allowed to add a number to a vector.\",\n    germanMessage: \"Man kann keine Zahl zu einem Vektor hinzuaddieren.\"\n  },\n  AdditionOfMatrixToVectorException: {\n    englishMessage: \"It is not allowed to add a matrix to a vector.\",\n    germanMessage: \"Man kann keine Matrix zu einem Vektor hinzuaddieren.\"\n  },\n  AdditionOfVectorsWrongDimensionsException: {\n    englishMessage: \"Vectors can only be added if they have the same number of rows.\",\n    germanMessage: \"Vektoren können nur addiert werden, wenn sie die gleiche Anzahl an Zeilen haben.\"\n  },\n  SubtractionOfNumberFromVectorException: {\n    englishMessage: \"It is not allowed to subtract a number from a vector.\",\n    germanMessage: \"Man kann keine Zahl von einem Vektor subtrahieren.\"\n  },\n  SubtractionOfMatrixFromVectorException: {\n    englishMessage: \"It is not allowed to subtract a matrix from a vector.\",\n    germanMessage: \"Man kann keine Matrix von einem Vektor subtrahieren.\"\n  },\n  InvalidOperatorException: {\n    englishMessage: \"An invalid operator has been detected.\",\n    germanMessage: \"Ein ungültiger Operator wurde gefunden.\"\n  },\n  RowReduceNotAMatrixException: {\n    englishMessage: \"The rowreduce operator can only process matrices.\",\n    germanMessage: \"Der rowreduce-Operator kann nur Matrizen verarbeiten.\"\n  }\n};\n\n//# sourceURL=webpack:///./source/mathEngine/Exceptions.js?");

/***/ }),

/***/ "./source/mathEngine/Helper.js":
/*!*************************************!*\
  !*** ./source/mathEngine/Helper.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Helper; });\n/* harmony import */ var mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mathEngine/imports.js */ \"./source/mathEngine/imports.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n/**\n * This class contains several helper methods that are used by the math engine.\n *\n * @author David Augustat\n * */\n\nvar Helper = /*#__PURE__*/function () {\n  function Helper() {\n    _classCallCheck(this, Helper);\n  }\n\n  _createClass(Helper, null, [{\n    key: \"getMatrixRegex\",\n\n    /**\n     * Returns the regex string for matching a matrix over a given field.\n     *\n     * @param {number} field The field of the numbers used inside the matrix\n     * @param {boolean} hasStartStopMarkers True if regex should include \"^\" at the beginning and \"$\" at the end so\n     * that it can directly be used as an input for RegExp(). Set to false, if this regex should be part of another regex.\n     * @returns {string}\n     * */\n    value: function getMatrixRegex(field) {\n      var hasStartStopMarkers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var templateMatrixRegex = \"\\{((number,)*number;)*(number,)*number\\}\";\n      var regex = templateMatrixRegex.split(\"number\").join(Helper.getRegexForField(field, false));\n      return Helper.prepareRegex(regex, hasStartStopMarkers);\n    }\n    /**\n     * Returns the regex string for matching a vector over a given field.\n     *\n     * @param {number} field The field of the numbers used inside the vector\n     * @param {boolean} hasStartStopMarkers True if regex should include \"^\" at the beginning and \"$\" at the end so\n     * that it can directly be used as an input for RegExp(). Set to false, if this regex should be part of another regex.\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"getVectorRegex\",\n    value: function getVectorRegex(field) {\n      var hasStartStopMarkers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var templateVectorRegex = \"\\\\[(number,)*number\\\\]\";\n      var regex = templateVectorRegex.split(\"number\").join(Helper.getRegexForField(field, false));\n      return Helper.prepareRegex(regex, hasStartStopMarkers);\n    }\n    /**\n     * Returns the regex string for matching real numbers.\n     *\n     * @param {boolean} hasStartStopMarkers True if regex should include \"^\" at the beginning and \"$\" at the end so\n     * that it can directly be used as an input for RegExp(). Set to false, if this regex should be part of another regex.\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"getRealNumberRegex\",\n    value: function getRealNumberRegex() {\n      var hasStartStopMarkers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var realNumberRegex = \"((-)?([0-9]+\\\\.[0-9]+|[0-9]+))\";\n      return Helper.prepareRegex(realNumberRegex, hasStartStopMarkers);\n    }\n    /**\n     * Returns the regex string for matching prime field numbers (any prime field will be matched).\n     *\n     * @param {boolean} hasStartStopMarkers True if regex should include \"^\" at the beginning and \"$\" at the end so\n     * that it can directly be used as an input for RegExp(). Set to false, if this regex should be part of another regex.\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"getPrimeFieldRegex\",\n    value: function getPrimeFieldRegex() {\n      var hasStartStopMarkers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var primeFieldRegex = \"(-)?([0-9]+)\";\n      return Helper.prepareRegex(primeFieldRegex, hasStartStopMarkers);\n    }\n    /**\n     * Returns the regex string for matching numbers on the F4 field.\n     *\n     * @param {boolean} hasStartStopMarkers True if regex should include \"^\" at the beginning and \"$\" at the end so\n     * that it can directly be used as an input for RegExp(). Set to false, if this regex should be part of another regex.\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"getF4Regex\",\n    value: function getF4Regex() {\n      var hasStartStopMarkers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var f4Regex = \"(0|1|a|a\\\\+1|1\\\\+a)\";\n      return Helper.prepareRegex(f4Regex, hasStartStopMarkers);\n    }\n    /**\n     * Returns the regex string for matching numbers on the F8 field.\n     *\n     * @param {boolean} hasStartStopMarkers True if regex should include \"^\" at the beginning and \"$\" at the end so\n     * that it can directly be used as an input for RegExp(). Set to false, if this regex should be part of another regex.\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"getF8Regex\",\n    value: function getF8Regex() {\n      var hasStartStopMarkers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var f8Regex = \"(0|1|b|1\\\\+b|b\\\\+1|bs|1\\\\+bs|bs\\\\+1|b\\\\+bs|bs\\\\+b|1\\\\+b\\\\+bs|1\\\\+bs\\\\+b|b\\\\+1\\\\+bs|b\\\\+bs\\\\+1|bs\\\\+1\\\\+b|bs\\\\+b\\\\+1)\";\n      return Helper.prepareRegex(f8Regex, hasStartStopMarkers);\n    }\n    /**\n     * Returns the regex string for matching numbers on the F9 field.\n     *\n     * @param {boolean} hasStartStopMarkers True if regex should include \"^\" at the beginning and \"$\" at the end so\n     * that it can directly be used as an input for RegExp(). Set to false, if this regex should be part of another regex.\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"getF9Regex\",\n    value: function getF9Regex() {\n      var hasStartStopMarkers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var f9Regex = \"(0|1|\\\\-1|j|j\\\\+1|1\\\\+j|j\\\\-1|\\\\-1\\\\+j|\\\\-j|\\\\-j\\\\+1|1\\\\-j|\\\\-j\\\\-1|\\\\-1\\\\-j)\";\n      return Helper.prepareRegex(f9Regex, hasStartStopMarkers);\n    }\n    /**\n     * Returns the regex string for matching numbers on any field. This regex will match any number, regardless of\n     * what field the number is on.\n     *\n     * @param {boolean} hasStartStopMarkers True if regex should include \"^\" at the beginning and \"$\" at the end so\n     * that it can directly be used as an input for RegExp(). Set to false, if this regex should be part of another regex.\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"getAnyNumberRegex\",\n    value: function getAnyNumberRegex() {\n      var hasStartStopMarkers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var anyNumberRegex = '(' + Helper.getRealNumberRegex(false) + '|' + Helper.getPrimeFieldRegex(false) + '|' + Helper.getF4Regex(false) + '|' + Helper.getF8Regex(false) + '|' + Helper.getF9Regex(false) + ')';\n      return Helper.prepareRegex(anyNumberRegex, hasStartStopMarkers);\n    }\n    /**\n     * Returns a regex that matches all numbers of the provided field.\n     *\n     * @param {number} field The field the regex should match for\n     * @param {boolean} hasStartStopMarkers True if regex should include \"^\" at the beginning and \"$\" at the end so\n     * that it can directly be used as an input for RegExp(). Set to false, if this regex should be part of another regex.\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"getRegexForField\",\n    value: function getRegexForField(field) {\n      var hasStartStopMarkers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      if (Helper.isRealNumbersField(field)) {\n        return Helper.getRealNumberRegex(hasStartStopMarkers);\n      } else if (Helper.isPrimeField(field)) {\n        return Helper.getPrimeFieldRegex(hasStartStopMarkers);\n      } else if (Helper.isExtendedField(field)) {\n        switch (field) {\n          case mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4:\n            return Helper.getF4Regex(hasStartStopMarkers);\n\n          case mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8:\n            return Helper.getF8Regex(hasStartStopMarkers);\n\n          case mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9:\n            {\n              return Helper.getF9Regex(hasStartStopMarkers);\n            }\n        }\n      }\n    }\n    /**\n     * Attaches start and stop markers \"^\" and \"$\" to the beginning and end to the regex string if hasStartStopMarkers is\n     * true. Otherwise, the provided regex will return as is.\n     *\n     * @param {string} regex The regex string to apply the changes to\n     * @param {boolean} hasStartStopMarkers True if regex should include \"^\" at the beginning and \"$\" at the end so\n     * that it can directly be used as an input for RegExp(). Set to false, if the provided regex should be part of\n     * another regex.\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"prepareRegex\",\n    value: function prepareRegex(regex, hasStartStopMarkers) {\n      if (hasStartStopMarkers) {\n        return \"^\" + regex + \"$\";\n      }\n\n      return regex;\n    }\n    /**\n     * Returns true if field is Field.R.\n     *\n     * @param {number} field\n     * @returns {boolean}\n     * */\n\n  }, {\n    key: \"isRealNumbersField\",\n    value: function isRealNumbersField(field) {\n      return field === mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].R;\n    }\n    /**\n     * Returns true, if field is a prime number field (e.g. F3, F5, F7)\n     *\n     * @param {number} field\n     * @returns {boolean}\n     * */\n\n  }, {\n    key: \"isPrimeField\",\n    value: function isPrimeField(field) {\n      return [mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F2, mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F3, mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F5, mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F7, mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F11, mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F13, mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F17, mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F19].includes(field);\n    }\n    /**\n     * Returns true, if field is either F4, F8 or F9.\n     *\n     * @param {number} field\n     * @returns {boolean}\n     * */\n\n  }, {\n    key: \"isExtendedField\",\n    value: function isExtendedField(field) {\n      return [mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4, mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8, mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9].includes(field);\n    }\n    /**\n     * Removes all spaces from a string.\n     *\n     * @param {string} text The string with spaces\n     * @returns string The string without spaces\n     * */\n\n  }, {\n    key: \"removeSpacesAndLineBreaks\",\n    value: function removeSpacesAndLineBreaks(text) {\n      var result = Helper.removeCharacter(text, ' ');\n      result = result.replace(/\\r?\\n|\\r/g, '');\n      return result;\n    }\n    /**\n     * Removes all occurrences of a character from a string\n     *\n     * @param {string} text The string with the character\n     * @param {string} characterToRemove The character to remove\n     * @returns string The string without character\n     * */\n\n  }, {\n    key: \"removeCharacter\",\n    value: function removeCharacter(text, characterToRemove) {\n      return text.split(characterToRemove).join('');\n    }\n    /**\n     * Converts a string into a number. Works for every available field.\n     *\n     * @param {string} numberString The string representation of the number. This must NOT contain spaces!\n     * @param {number} field The field in which the number should be parsed\n     * @returns {GeneralNumber} The number equivalent to numberString\n     * */\n\n  }, {\n    key: \"getNumberFromNumberString\",\n    value: function getNumberFromNumberString(field, numberString) {\n      if (Helper.isRealNumbersField(field)) {\n        return new mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"RealNumber\"](parseFloat(numberString));\n      } else if (Helper.isPrimeField(field)) {\n        return mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"PrimeFieldNumber\"].fromString(field, numberString);\n      } else if (field === mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4) {\n        return mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"F4Number\"].fromString(field, numberString);\n      } else if (field === mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8) {\n        return mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"F8Number\"].fromString(field, numberString);\n      } else if (field === mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9) {\n        return mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"F9Number\"].fromString(field, numberString);\n      }\n    }\n    /**\n     * Returns true if the provided number is an integer value (meaning it does not have decimals)\n     *\n     * E.g. 3.5 will return false, but 3.0 will return true.\n     *\n     * @param {number} number\n     * @returns {boolean} True when number is an integer\n     * */\n\n  }, {\n    key: \"numberIsInteger\",\n    value: function numberIsInteger(number) {\n      return number === parseInt(Helper.number);\n    }\n    /**\n     * Solves the problem, that in JavaScript there exists a positive zero (0) as well as a negative zero (-0).\n     *\n     * This method converts any negative zero to a positive zero. If the number is not 0, then the number will\n     * be returned unchanged.\n     *\n     * @param {number} number\n     * @returns {number}\n     * */\n\n  }, {\n    key: \"preventNegativeZero\",\n    value: function preventNegativeZero(number) {\n      //Yes, it's actually meant to be like that, and fixes the problem:\n      return number + 0;\n    }\n    /**\n     * Creates a new number object from a number value that matches the provided field.\n     *\n     * E.g. for field == Field.F4 and value == 0, the result will be new F4Number(Field.F4Zero)\n     *\n     * @param {number} field field to parse the number to\n     * @param {number} value The number value to use as a value in the number object\n     * @returns {GeneralNumber} The created fitting number object\n     * */\n\n  }, {\n    key: \"parseValueToFittingNumberObject\",\n    value: function parseValueToFittingNumberObject(field, value) {\n      if (Helper.isRealNumbersField(field)) {\n        return new mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"RealNumber\"](value);\n      } else if (Helper.isPrimeField(field)) {\n        return new mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"PrimeFieldNumber\"](field, value);\n      } else if (Helper.isExtendedField(field)) {\n        switch (field) {\n          case mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4:\n            return new mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"F4Number\"](value);\n\n          case mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8:\n            return new mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"F8Number\"](value);\n\n          case mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9:\n            return new mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"F9Number\"](value);\n        }\n      }\n    }\n    /**\n     * Returns true if the provided character is an opening bracket.\n     *\n     * Supported bracket types are (, { and [.\n     *\n     * @param {string} character The character to check\n     * @returns {boolean}\n     * */\n\n  }, {\n    key: \"isOpeningBracket\",\n    value: function isOpeningBracket(character) {\n      return character === '(' || character === '{' || character === '[';\n    }\n    /**\n     * Returns true if the provided character is a closing bracket.\n     *\n     * Supported bracket types are ), } and ].\n     *\n     * @param {string} character The character to check\n     * @returns {boolean}\n     * */\n\n  }, {\n    key: \"isClosingBracket\",\n    value: function isClosingBracket(character) {\n      return character === ')' || character === '}' || character === ']';\n    }\n    /**\n     * Rounds a float number to a given number of decimals. Trailing zeros are removed.\n     *\n     * e.g. round(5.12345, 3) becomes 5.123 and round(5.1, 3) becomes 5.1\n     *\n     * @param {number} number The number to round\n     * @param {number} numberOfDecimals The maximum number of digits after the floating point\n     * @returns {string} The rounded number\n     * */\n\n  }, {\n    key: \"round\",\n    value: function round(number, numberOfDecimals) {\n      return parseFloat(number.toFixed(numberOfDecimals)).toString();\n    }\n  }]);\n\n  return Helper;\n}();\n\n\n\n//# sourceURL=webpack:///./source/mathEngine/Helper.js?");

/***/ }),

/***/ "./source/mathEngine/imports.js":
/*!**************************************!*\
  !*** ./source/mathEngine/imports.js ***!
  \**************************************/
/*! exports provided: F4Number, F8Number, F9Number, PrimeFieldNumber, RealNumber, GeneralNumber, Vector, Matrix, MathElement, FieldLookupTables, Field, ExpressionNode, Interpreter, Parser, InputToLatexConverter, UserIoHandler, Exceptions, Helper, Constants, Operators */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var mathEngine_math_F4Number_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mathEngine/math/F4Number.js */ \"./source/mathEngine/math/F4Number.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"F4Number\", function() { return mathEngine_math_F4Number_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* harmony import */ var mathEngine_math_F8Number_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mathEngine/math/F8Number.js */ \"./source/mathEngine/math/F8Number.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"F8Number\", function() { return mathEngine_math_F8Number_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; });\n\n/* harmony import */ var mathEngine_math_F9Number_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! mathEngine/math/F9Number.js */ \"./source/mathEngine/math/F9Number.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"F9Number\", function() { return mathEngine_math_F9Number_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; });\n\n/* harmony import */ var mathEngine_math_PrimeFieldNumber_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! mathEngine/math/PrimeFieldNumber.js */ \"./source/mathEngine/math/PrimeFieldNumber.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PrimeFieldNumber\", function() { return mathEngine_math_PrimeFieldNumber_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; });\n\n/* harmony import */ var mathEngine_math_RealNumber_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! mathEngine/math/RealNumber.js */ \"./source/mathEngine/math/RealNumber.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RealNumber\", function() { return mathEngine_math_RealNumber_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]; });\n\n/* harmony import */ var mathEngine_math_GeneralNumber_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! mathEngine/math/GeneralNumber.js */ \"./source/mathEngine/math/GeneralNumber.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"GeneralNumber\", function() { return mathEngine_math_GeneralNumber_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]; });\n\n/* harmony import */ var mathEngine_math_Vector_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! mathEngine/math/Vector.js */ \"./source/mathEngine/math/Vector.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Vector\", function() { return mathEngine_math_Vector_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]; });\n\n/* harmony import */ var mathEngine_math_Matrix_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! mathEngine/math/Matrix.js */ \"./source/mathEngine/math/Matrix.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Matrix\", function() { return mathEngine_math_Matrix_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]; });\n\n/* harmony import */ var mathEngine_math_MathElement_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! mathEngine/math/MathElement.js */ \"./source/mathEngine/math/MathElement.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MathElement\", function() { return mathEngine_math_MathElement_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]; });\n\n/* harmony import */ var mathEngine_math_FieldLookupTables_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! mathEngine/math/FieldLookupTables.js */ \"./source/mathEngine/math/FieldLookupTables.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FieldLookupTables\", function() { return mathEngine_math_FieldLookupTables_js__WEBPACK_IMPORTED_MODULE_9__[\"FieldLookupTables\"]; });\n\n/* harmony import */ var mathEngine_math_Field_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! mathEngine/math/Field.js */ \"./source/mathEngine/math/Field.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Field\", function() { return mathEngine_math_Field_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]; });\n\n/* harmony import */ var mathEngine_stringInterpretation_ExpressionNode_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! mathEngine/stringInterpretation/ExpressionNode.js */ \"./source/mathEngine/stringInterpretation/ExpressionNode.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ExpressionNode\", function() { return mathEngine_stringInterpretation_ExpressionNode_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"]; });\n\n/* harmony import */ var mathEngine_stringInterpretation_Interpreter_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! mathEngine/stringInterpretation/Interpreter.js */ \"./source/mathEngine/stringInterpretation/Interpreter.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Interpreter\", function() { return mathEngine_stringInterpretation_Interpreter_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"]; });\n\n/* harmony import */ var mathEngine_stringInterpretation_Parser_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! mathEngine/stringInterpretation/Parser.js */ \"./source/mathEngine/stringInterpretation/Parser.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Parser\", function() { return mathEngine_stringInterpretation_Parser_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"]; });\n\n/* harmony import */ var mathEngine_stringInterpretation_InputToLatexConverter_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! mathEngine/stringInterpretation/InputToLatexConverter.js */ \"./source/mathEngine/stringInterpretation/InputToLatexConverter.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"InputToLatexConverter\", function() { return mathEngine_stringInterpretation_InputToLatexConverter_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"]; });\n\n/* harmony import */ var mathEngine_stringInterpretation_UserIoHandler_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! mathEngine/stringInterpretation/UserIoHandler.js */ \"./source/mathEngine/stringInterpretation/UserIoHandler.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"UserIoHandler\", function() { return mathEngine_stringInterpretation_UserIoHandler_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"]; });\n\n/* harmony import */ var mathEngine_Exceptions_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! mathEngine/Exceptions.js */ \"./source/mathEngine/Exceptions.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Exceptions\", function() { return mathEngine_Exceptions_js__WEBPACK_IMPORTED_MODULE_16__[\"Exceptions\"]; });\n\n/* harmony import */ var mathEngine_Helper_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! mathEngine/Helper.js */ \"./source/mathEngine/Helper.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Helper\", function() { return mathEngine_Helper_js__WEBPACK_IMPORTED_MODULE_17__[\"default\"]; });\n\n/* harmony import */ var mathEngine_Constants_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! mathEngine/Constants.js */ \"./source/mathEngine/Constants.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Constants\", function() { return mathEngine_Constants_js__WEBPACK_IMPORTED_MODULE_18__[\"Constants\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Operators\", function() { return mathEngine_Constants_js__WEBPACK_IMPORTED_MODULE_18__[\"Operators\"]; });\n\n/**\n * This file is supposed the simplify the import of javaScript files into other JavaScript files.\n *\n * @author David Augustat\n * */\n// math:\n\n\n\n\n\n\n\n\n\n\n // stringInterpretation:\n\n\n\n\n\n // general:\n\n\n\n\n\n/*\nimport {F4Number, F8Number, F9Number, PrimeFieldNumber, RealNumber, GeneralNumber, Vector, Matrix, MathElement,\n    FieldLookupTable, Field, ExpressionNode, Interpreter, Parser, InputToLatexConverter, UserIoHandler, Exceptions,\n    Helper, Constants, Operators} from 'mathEngine/imports.js';\n*/\n\n//# sourceURL=webpack:///./source/mathEngine/imports.js?");

/***/ }),

/***/ "./source/mathEngine/math/F4Number.js":
/*!********************************************!*\
  !*** ./source/mathEngine/math/F4Number.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return F4Number; });\n/* harmony import */ var _imports_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../imports.js */ \"./source/mathEngine/imports.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n/**\n * Class for storing numbers over the F4 field with the 4 elements 0, 1, a, a+1 (a is alpha).\n *\n * @author David Augustat\n * */\n\nvar F4Number = /*#__PURE__*/function (_GeneralNumber) {\n  _inherits(F4Number, _GeneralNumber);\n\n  var _super = _createSuper(F4Number);\n\n  /**\n   * @param {number} value\n   * */\n  function F4Number(value) {\n    _classCallCheck(this, F4Number);\n\n    return _super.call(this, _imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4, value);\n  }\n  /**\n   * @param {F4Number} factor\n   * @returns {F4Number}\n   * */\n\n\n  _createClass(F4Number, [{\n    key: \"_multiplyWithNumber\",\n    value: function _multiplyWithNumber(factor) {\n      var _this = this;\n\n      var resultValue = _imports_js__WEBPACK_IMPORTED_MODULE_0__[\"FieldLookupTables\"].F4MultiplicationLookup.find(function (object) {\n        return object.factor1 === _this.value && object.factor2 === factor.value;\n      }).result;\n      return new F4Number(resultValue);\n    }\n    /**\n     * @param {F4Number} summand\n     * @returns {F4Number}\n     * */\n\n  }, {\n    key: \"_addNumber\",\n    value: function _addNumber(summand) {\n      var _this2 = this;\n\n      var resultValue = _imports_js__WEBPACK_IMPORTED_MODULE_0__[\"FieldLookupTables\"].F4AdditionLookup.find(function (object) {\n        return object.summand1 === _this2.value && object.summand2 === summand.value;\n      }).result;\n      return new F4Number(resultValue);\n    }\n    /**\n     * @param {F4Number} subtrahend\n     * @return {F4Number}\n     * */\n\n  }, {\n    key: \"_subtractNumber\",\n    value: function _subtractNumber(subtrahend) {\n      return this._addNumber(subtrahend.getAdditiveInverse());\n    }\n    /**\n     * @param {F4Number} divisor\n     * @returns {F4Number}\n     * */\n\n  }, {\n    key: \"_divideByNumber\",\n    value: function _divideByNumber(divisor) {\n      return this._multiplyWithNumber(divisor.getMultiplicativeInverse());\n    }\n    /**\n     * Retrieves the multiplicative inverse from a lookup table.\n     *\n     * @returns {F4Number}\n     * */\n\n  }, {\n    key: \"getMultiplicativeInverse\",\n    value: function getMultiplicativeInverse() {\n      var _this3 = this;\n\n      var resultValue = _imports_js__WEBPACK_IMPORTED_MODULE_0__[\"FieldLookupTables\"].F4MultiplicationInverseLookup.find(function (object) {\n        return object.number === _this3.value;\n      }).inverse;\n      return new F4Number(resultValue);\n    }\n    /**\n     * Retrieves the additive inverse from a lookup table.\n     *\n     * @returns {F4Number}\n     * */\n\n  }, {\n    key: \"getAdditiveInverse\",\n    value: function getAdditiveInverse() {\n      var _this4 = this;\n\n      var resultValue = _imports_js__WEBPACK_IMPORTED_MODULE_0__[\"FieldLookupTables\"].F4AdditionInverseLookup.find(function (object) {\n        return object.number === _this4.value;\n      }).inverse;\n      return new F4Number(resultValue);\n    }\n    /**\n     * Retrieves the corresponding string value from a lookup table.\n     *\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this5 = this;\n\n      return _imports_js__WEBPACK_IMPORTED_MODULE_0__[\"FieldLookupTables\"].F4ElementsNameLookup.find(function (object) {\n        return object.number === _this5.value;\n      }).name;\n    }\n    /**\n     * Retrieves the corresponding user input string value from a lookup table.\n     *\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"toUserInputString\",\n    value: function toUserInputString() {\n      var _this6 = this;\n\n      return _imports_js__WEBPACK_IMPORTED_MODULE_0__[\"FieldLookupTables\"].F4ElementsUserInputLookup.find(function (object) {\n        return object.number === _this6.value;\n      }).inputString;\n    }\n    /**\n     * Returns an object that is identical to the current one, but not the same object.\n     *\n     * @returns {F4Number}\n     * */\n\n  }, {\n    key: \"getCopy\",\n    value: function getCopy() {\n      return new F4Number(this.value);\n    }\n    /**\n     * Compares the input string with all allowed values. If none matches, an exception is thrown.\n     *\n     * @param {?number} field\n     * @param {string} text\n     * @returns {F4Number}\n     * */\n\n  }], [{\n    key: \"fromString\",\n    value: function fromString(field, text) {\n      var result;\n\n      if (text === \"0\") {\n        result = _imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero;\n      } else if (text === \"1\") {\n        result = _imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One;\n      } else if (text === \"a\") {\n        result = _imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha;\n      } else if ([\"a+1\", \"1+a\"].includes(text)) {\n        result = _imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne;\n      } else {\n        throw _imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].InvalidNumberException;\n      }\n\n      return new F4Number(result);\n    }\n  }]);\n\n  return F4Number;\n}(_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"GeneralNumber\"]);\n\n\n\n//# sourceURL=webpack:///./source/mathEngine/math/F4Number.js?");

/***/ }),

/***/ "./source/mathEngine/math/F8Number.js":
/*!********************************************!*\
  !*** ./source/mathEngine/math/F8Number.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return F8Number; });\n/* harmony import */ var mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mathEngine/imports.js */ \"./source/mathEngine/imports.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n/**\n * Class for storing numbers over the F8 field with the 8 elements 0, 1, b, 1+b, b², 1+b², b+b², 1+b+b² (b is beta).\n *\n * @author David Augustat\n * */\n\nvar F8Number = /*#__PURE__*/function (_GeneralNumber) {\n  _inherits(F8Number, _GeneralNumber);\n\n  var _super = _createSuper(F8Number);\n\n  /**\n   * @param {number} value\n   * */\n  function F8Number(value) {\n    _classCallCheck(this, F8Number);\n\n    return _super.call(this, mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8, value);\n  }\n  /**\n   * @param {F8Number} factor\n   * @returns {F8Number}\n   * */\n\n\n  _createClass(F8Number, [{\n    key: \"_multiplyWithNumber\",\n    value: function _multiplyWithNumber(factor) {\n      var _this = this;\n\n      var resultValue = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"FieldLookupTables\"].F8MultiplicationLookup.find(function (object) {\n        return object.factor1 === _this.value && object.factor2 === factor.value;\n      }).result;\n      return new F8Number(resultValue);\n    }\n    /**\n     * @param {F8Number} summand\n     * @returns {F8Number}\n     * */\n\n  }, {\n    key: \"_addNumber\",\n    value: function _addNumber(summand) {\n      var _this2 = this;\n\n      var resultValue = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"FieldLookupTables\"].F8AdditionLookup.find(function (object) {\n        return object.summand1 === _this2.value && object.summand2 === summand.value;\n      }).result;\n      return new F8Number(resultValue);\n    }\n    /**\n     * @param {F8Number} subtrahend\n     * @return {F8Number}\n     * */\n\n  }, {\n    key: \"_subtractNumber\",\n    value: function _subtractNumber(subtrahend) {\n      return this._addNumber(subtrahend.getAdditiveInverse());\n    }\n    /**\n     * @param {F8Number} divisor\n     * @returns {F8Number}\n     * */\n\n  }, {\n    key: \"_divideByNumber\",\n    value: function _divideByNumber(divisor) {\n      return this._multiplyWithNumber(divisor.getMultiplicativeInverse());\n    }\n    /**\n     * Retrieves the multiplicative inverse from a lookup table.\n     *\n     * @returns {F8Number}\n     * */\n\n  }, {\n    key: \"getMultiplicativeInverse\",\n    value: function getMultiplicativeInverse() {\n      var _this3 = this;\n\n      var resultValue = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"FieldLookupTables\"].F8MultiplicationInverseLookup.find(function (object) {\n        return object.number === _this3.value;\n      }).inverse;\n      return new F8Number(resultValue);\n    }\n    /**\n     * Retrieves the additive inverse from a lookup table.\n     *\n     * @returns {F8Number}\n     * */\n\n  }, {\n    key: \"getAdditiveInverse\",\n    value: function getAdditiveInverse() {\n      var _this4 = this;\n\n      var resultValue = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"FieldLookupTables\"].F8AdditionInverseLookup.find(function (object) {\n        return object.number === _this4.value;\n      }).inverse;\n      return new F8Number(resultValue);\n    }\n    /**\n     * Retrieves the corresponding string value from a lookup table.\n     *\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this5 = this;\n\n      return mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"FieldLookupTables\"].F8ElementsNameLookup.find(function (object) {\n        return object.number === _this5.value;\n      }).name;\n    }\n    /**\n     * Retrieves the corresponding user input string value from a lookup table.\n     *\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"toUserInputString\",\n    value: function toUserInputString() {\n      var _this6 = this;\n\n      return mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"FieldLookupTables\"].F8ElementsUserInputLookup.find(function (object) {\n        return object.number === _this6.value;\n      }).inputString;\n    }\n    /**\n     * Returns an object that is identical to the current one, but not the same object.\n     *\n     * @returns {F8Number}\n     * */\n\n  }, {\n    key: \"getCopy\",\n    value: function getCopy() {\n      return new F8Number(this.value);\n    }\n    /**\n     * Compares the input string with all allowed values. If none matches, an exception is thrown.\n     *\n     * @param {?number} field\n     * @param {string} text\n     * @returns {F8Number}\n     * */\n\n  }], [{\n    key: \"fromString\",\n    value: function fromString(field, text) {\n      var result;\n\n      if (text === \"0\") {\n        result = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero;\n      } else if (text === \"1\") {\n        result = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One;\n      } else if (text === \"b\") {\n        result = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta;\n      } else if (text === \"bs\") {\n        result = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare;\n      } else if ([\"1+b\", \"b+1\"].includes(text)) {\n        result = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta;\n      } else if ([\"1+bs\", \"bs+1\"].includes(text)) {\n        result = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare;\n      } else if ([\"b+bs\", \"bs+b\"].includes(text)) {\n        result = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare;\n      } else if ([\"1+b+bs\", \"1+bs+b\", \"b+1+bs\", \"b+bs+1\", \"bs+1+b\", \"bs+b+1\"].includes(text)) {\n        result = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare;\n      } else {\n        throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].InvalidNumberException;\n      }\n\n      return new F8Number(result);\n    }\n  }]);\n\n  return F8Number;\n}(mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"GeneralNumber\"]);\n\n\n\n//# sourceURL=webpack:///./source/mathEngine/math/F8Number.js?");

/***/ }),

/***/ "./source/mathEngine/math/F9Number.js":
/*!********************************************!*\
  !*** ./source/mathEngine/math/F9Number.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return F9Number; });\n/* harmony import */ var mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mathEngine/imports.js */ \"./source/mathEngine/imports.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n/**\n * Class for storing numbers over the F9 field with the 9 elements 0, 1, -1, j, j+1, j-1, -j, -j+1, -j-1 (j is iota).\n *\n * @author David Augustat\n * */\n\nvar F9Number = /*#__PURE__*/function (_GeneralNumber) {\n  _inherits(F9Number, _GeneralNumber);\n\n  var _super = _createSuper(F9Number);\n\n  /**\n   * @param {number} value\n   * */\n  function F9Number(value) {\n    _classCallCheck(this, F9Number);\n\n    return _super.call(this, mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9, value);\n  }\n  /**\n   * @param {F9Number} factor\n   * @returns {F9Number}\n   * */\n\n\n  _createClass(F9Number, [{\n    key: \"_multiplyWithNumber\",\n    value: function _multiplyWithNumber(factor) {\n      var _this = this;\n\n      var resultValue = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"FieldLookupTables\"].F9MultiplicationLookup.find(function (object) {\n        return object.factor1 === _this.value && object.factor2 === factor.value;\n      }).result;\n      return new F9Number(resultValue);\n    }\n    /**\n     * @param {F9Number} summand\n     * @returns {F9Number}\n     * */\n\n  }, {\n    key: \"_addNumber\",\n    value: function _addNumber(summand) {\n      var _this2 = this;\n\n      var resultValue = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"FieldLookupTables\"].F9AdditionLookup.find(function (object) {\n        return object.summand1 === _this2.value && object.summand2 === summand.value;\n      }).result;\n      return new F9Number(resultValue);\n    }\n    /**\n     * @param {F9Number} subtrahend\n     * @return {F9Number}\n     * */\n\n  }, {\n    key: \"_subtractNumber\",\n    value: function _subtractNumber(subtrahend) {\n      return this._addNumber(subtrahend.getAdditiveInverse());\n    }\n    /**\n     * @param {F9Number} divisor\n     * @returns {F9Number}\n     * */\n\n  }, {\n    key: \"_divideByNumber\",\n    value: function _divideByNumber(divisor) {\n      return this._multiplyWithNumber(divisor.getMultiplicativeInverse());\n    }\n    /**\n     * Retrieves the multiplicative inverse from a lookup table.\n     *\n     * @returns {F9Number}\n     * */\n\n  }, {\n    key: \"getMultiplicativeInverse\",\n    value: function getMultiplicativeInverse() {\n      var _this3 = this;\n\n      var resultValue = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"FieldLookupTables\"].F9MultiplicationInverseLookup.find(function (object) {\n        return object.number === _this3.value;\n      }).inverse;\n      return new F9Number(resultValue);\n    }\n    /**\n     * Retrieves the additive inverse from a lookup table.\n     *\n     * @returns {F9Number}\n     * */\n\n  }, {\n    key: \"getAdditiveInverse\",\n    value: function getAdditiveInverse() {\n      var _this4 = this;\n\n      var resultValue = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"FieldLookupTables\"].F9AdditionInverseLookup.find(function (object) {\n        return object.number === _this4.value;\n      }).inverse;\n      return new F9Number(resultValue);\n    }\n    /**\n     * Retrieves the corresponding string value from a lookup table.\n     *\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this5 = this;\n\n      return mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"FieldLookupTables\"].F9ElementsNameLookup.find(function (object) {\n        return object.number === _this5.value;\n      }).name;\n    }\n    /**\n     * Retrieves the corresponding user input string value from a lookup table.\n     *\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"toUserInputString\",\n    value: function toUserInputString() {\n      var _this6 = this;\n\n      return mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"FieldLookupTables\"].F9ElementsUserInputLookup.find(function (object) {\n        return object.number === _this6.value;\n      }).inputString;\n    }\n    /**\n     * Returns an object that is identical to the current one, but not the same object.\n     *\n     * @returns {F9Number}\n     * */\n\n  }, {\n    key: \"getCopy\",\n    value: function getCopy() {\n      return new F9Number(this.value);\n    }\n    /**\n     * Compares the input string with all allowed values. If none matches, an exception is thrown.\n     *\n     * @param {?number} field\n     * @param {string} text\n     * @returns {F9Number}\n     * */\n\n  }], [{\n    key: \"fromString\",\n    value: function fromString(field, text) {\n      var result;\n\n      if (text === \"0\") {\n        result = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero;\n      } else if (text === \"1\") {\n        result = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One;\n      } else if (text === \"-1\") {\n        result = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne;\n      } else if (text === \"j\") {\n        result = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota;\n      } else if (text === \"-j\") {\n        result = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota;\n      } else if ([\"j+1\", \"1+j\"].includes(text)) {\n        result = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne;\n      } else if ([\"j-1\", \"-1+j\"].includes(text)) {\n        result = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne;\n      } else if ([\"-j+1\", \"1-j\"].includes(text)) {\n        result = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne;\n      } else if ([\"-j-1\", \"-1-j\"].includes(text)) {\n        result = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne;\n      } else {\n        throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].InvalidNumberException;\n      }\n\n      return new F9Number(result);\n    }\n  }]);\n\n  return F9Number;\n}(mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"GeneralNumber\"]);\n\n\n\n//# sourceURL=webpack:///./source/mathEngine/math/F9Number.js?");

/***/ }),

/***/ "./source/mathEngine/math/Field.js":
/*!*****************************************!*\
  !*** ./source/mathEngine/math/Field.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Field; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Stores constants regarding the different fields and their values.\n *\n * @author David Augustat\n * */\nvar Field = function Field() {\n  _classCallCheck(this, Field);\n};\n\n_defineProperty(Field, \"F2\", 2);\n\n_defineProperty(Field, \"F3\", 3);\n\n_defineProperty(Field, \"F4\", 4);\n\n_defineProperty(Field, \"F5\", 5);\n\n_defineProperty(Field, \"F7\", 7);\n\n_defineProperty(Field, \"F8\", 8);\n\n_defineProperty(Field, \"F9\", 9);\n\n_defineProperty(Field, \"F11\", 11);\n\n_defineProperty(Field, \"F13\", 13);\n\n_defineProperty(Field, \"F17\", 17);\n\n_defineProperty(Field, \"F19\", 19);\n\n_defineProperty(Field, \"R\", 100);\n\n_defineProperty(Field, \"F4Zero\", 0);\n\n_defineProperty(Field, \"F4One\", 1);\n\n_defineProperty(Field, \"F4Alpha\", 2);\n\n_defineProperty(Field, \"F4AlphaPlusOne\", 3);\n\n_defineProperty(Field, \"F8Zero\", 0);\n\n_defineProperty(Field, \"F8One\", 1);\n\n_defineProperty(Field, \"F8Beta\", 2);\n\n_defineProperty(Field, \"F8OnePlusBeta\", 3);\n\n_defineProperty(Field, \"F8BetaSquare\", 4);\n\n_defineProperty(Field, \"F8OnePlusBetaSquare\", 5);\n\n_defineProperty(Field, \"F8BetaPlusBetaSquare\", 6);\n\n_defineProperty(Field, \"F8OnePlusBetaPlusBetaSquare\", 7);\n\n_defineProperty(Field, \"F9Zero\", 0);\n\n_defineProperty(Field, \"F9One\", 1);\n\n_defineProperty(Field, \"F9MinusOne\", 2);\n\n_defineProperty(Field, \"F9Iota\", 3);\n\n_defineProperty(Field, \"F9IotaPlusOne\", 4);\n\n_defineProperty(Field, \"F9IotaMinusOne\", 5);\n\n_defineProperty(Field, \"F9MinusIota\", 6);\n\n_defineProperty(Field, \"F9MinusIotaPlusOne\", 7);\n\n_defineProperty(Field, \"F9MinusIotaMinusOne\", 8);\n\n\n\n//# sourceURL=webpack:///./source/mathEngine/math/Field.js?");

/***/ }),

/***/ "./source/mathEngine/math/FieldLookupTables.js":
/*!*****************************************************!*\
  !*** ./source/mathEngine/math/FieldLookupTables.js ***!
  \*****************************************************/
/*! exports provided: FieldLookupTables */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FieldLookupTables\", function() { return FieldLookupTables; });\n/* harmony import */ var mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mathEngine/imports.js */ \"./source/mathEngine/imports.js\");\n\n/**\n * Lookup table file that contains all kinds of lookup tables for the fields F4, F8, F9.\n *\n * @author David Augustat\n * */\n\nvar FieldLookupTables = {\n  /** @type {[{number: number, name: string}]} */\n  F4ElementsNameLookup: [{\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero,\n    name: \"0\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One,\n    name: \"1\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha,\n    name: \"α\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne,\n    name: \"α+1\"\n  }],\n\n  /** @type {[{number: number, inputString: string}]} */\n  F4ElementsUserInputLookup: [{\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero,\n    inputString: \"0\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One,\n    inputString: \"1\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha,\n    inputString: \"a\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne,\n    inputString: \"a+1\"\n  }],\n\n  /** @type {[{number: number, inverse: number}]} */\n  F4MultiplicationInverseLookup: [{\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha\n  }],\n\n  /** @type {[{number: number, inverse: number}]} */\n  F4AdditionInverseLookup: [{\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne\n  }],\n\n  /** @type {[{summand1: number, summand2: number, result: number}]} */\n  F4AdditionLookup: [{\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero\n  }],\n\n  /** @type {[{factor1: number, factor2: number, result: number}]} */\n  F4MultiplicationLookup: [{\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4One\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4AlphaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4Alpha\n  }],\n\n  /** @type {[{number: number, name: string}]} */\n  F8ElementsNameLookup: [{\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    name: \"0\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    name: \"1\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    name: \"β\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    name: \"1+β\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    name: \"β²\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    name: \"1+β²\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    name: \"β+β²\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    name: \"1+β+β²\"\n  }],\n\n  /** @type {[{number: number, inputString: string}]} */\n  F8ElementsUserInputLookup: [{\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    inputString: \"0\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    inputString: \"1\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    inputString: \"b\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    inputString: \"1+b\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    inputString: \"bs\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    inputString: \"1+bs\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    inputString: \"b+bs\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    inputString: \"1+b+bs\"\n  }],\n\n  /** @type {[{number: number, inverse: number}]} */\n  F8MultiplicationInverseLookup: [{\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare\n  }],\n\n  /** @type {[{number: number, inverse: number}]} */\n  F8AdditionInverseLookup: [{\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare\n  }],\n\n  /** @type {[{summand1: number, summand2: number, result: number}]} */\n  F8AdditionLookup: [{\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero\n  }],\n\n  /** @type {[{factor1: number, factor2: number, result: number}]} */\n  F8MultiplicationLookup: [{\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8Beta\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8One\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8BetaSquare\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBetaPlusBetaSquare,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8OnePlusBeta\n  }],\n\n  /** @type {[{number: number, name: string}]} */\n  F9ElementsNameLookup: [{\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    name: \"0\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    name: \"1\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    name: \"-1\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    name: \"ι\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    name: \"ι+1\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    name: \"ι-1\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    name: \"-ι\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    name: \"-ι+1\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    name: \"-ι-1\"\n  }],\n\n  /** @type {[{number: number, inputString: string}]} */\n  F9ElementsUserInputLookup: [{\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    inputString: \"0\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    inputString: \"1\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    inputString: \"-1\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    inputString: \"j\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    inputString: \"j+1\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    inputString: \"j-1\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    inputString: \"-j\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    inputString: \"-j+1\"\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    inputString: \"-j-1\"\n  }],\n\n  /** @type {[{number: number, inverse: number}]} */\n  F9MultiplicationInverseLookup: [{\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne\n  }],\n\n  /** @type {[{number: number, inverse: number}]} */\n  F9AdditionInverseLookup: [{\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne\n  }, {\n    number: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    inverse: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne\n  }],\n\n  /** @type {[{summand1: number, summand2: number, result: number}]} */\n  F9AdditionLookup: [{\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota\n  }, {\n    summand1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    summand2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne\n  }],\n\n  /** @type {[{factor1: number, factor2: number, result: number}]} */\n  F9MultiplicationLookup: [{\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Zero\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9Iota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9IotaMinusOne\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaPlusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9One\n  }, {\n    factor1: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    factor2: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIotaMinusOne,\n    result: mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9MinusIota\n  }]\n};\n\n//# sourceURL=webpack:///./source/mathEngine/math/FieldLookupTables.js?");

/***/ }),

/***/ "./source/mathEngine/math/GeneralNumber.js":
/*!*************************************************!*\
  !*** ./source/mathEngine/math/GeneralNumber.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return GeneralNumber; });\n/* harmony import */ var mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mathEngine/imports.js */ \"./source/mathEngine/imports.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n/**\n * General (abstract) class for storing a number over a field.\n *\n * Known subtypes of this class are RealNumber, PrimeFieldNumber, F4Number, F8Number and F9Number\n *\n * Do not create objects from this class but from their subtypes.\n *\n * @author David Augustat\n * */\n\nvar GeneralNumber = /*#__PURE__*/function (_MathElement) {\n  _inherits(GeneralNumber, _MathElement);\n\n  var _super = _createSuper(GeneralNumber);\n\n  function GeneralNumber() {\n    _classCallCheck(this, GeneralNumber);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GeneralNumber, [{\n    key: \"getMultiplicativeInverse\",\n\n    /**\n     * Calculates and returns a GeneralNumber containing the multiplicative inverse of the value in the current\n     * GeneralNumber object.\n     *\n     * The multiplicative inverse y for a number x is defined as x * y = 1\n     *\n     * E.g. getMultiplicativeInverse(new RealNumber(5)).value would return 0.5\n     *\n     * @returns {GeneralNumber}\n     * */\n    value: function getMultiplicativeInverse() {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].MethodNotImplementedException;\n    }\n    /**\n     * Calculates and returns a GeneralNumber containing the additive inverse of the value in the current\n     * GeneralNumber object.\n     *\n     * The additive inverse y for a number x is defined as x + y = 0\n     *\n     * E.g. getAdditiveInverse(new RealNumber(5)).value would return -5\n     *\n     * @returns {GeneralNumber}\n     * */\n\n  }, {\n    key: \"getAdditiveInverse\",\n    value: function getAdditiveInverse() {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].MethodNotImplementedException;\n    }\n    /**\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"toLatex\",\n    value: function toLatex() {\n      return this.toString();\n    }\n    /**\n     * @param {Matrix} factor\n     * @returns {Matrix}\n     * */\n\n  }, {\n    key: \"_multiplyWithMatrix\",\n    value: function _multiplyWithMatrix(factor) {\n      return factor._multiplyWithNumber(this);\n    }\n    /**\n     * @param {Vector} factor\n     * @returns {Vector}\n     * */\n\n  }, {\n    key: \"_multiplyWithVector\",\n    value: function _multiplyWithVector(factor) {\n      return factor._multiplyWithNumber(this);\n    }\n    /**\n     * Addition of a matrix to a number is not allowed. Therefore an exception will be thrown.\n     *\n     * @param {Matrix} summand\n     * */\n\n  }, {\n    key: \"_addMatrix\",\n    value: function _addMatrix(summand) {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].AdditionOfMatrixToNumberException;\n    }\n    /**\n     * Addition of a vector to a number is not allowed. Therefore an exception will be thrown.\n     *\n     * @param {Vector} summand\n     * */\n\n  }, {\n    key: \"_addVector\",\n    value: function _addVector(summand) {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].AdditionOfVectorToNumberException;\n    }\n    /**\n     * Subtraction of a matrix from a number is not allowed. Therefore an exception will be thrown.\n     *\n     * @param {Matrix} subtrahend\n     * */\n\n  }, {\n    key: \"_subtractMatrix\",\n    value: function _subtractMatrix(subtrahend) {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].SubtractionOfMatrixFromNumberException;\n    }\n    /**\n     * Subtraction of a vector from a number is not allowed. Therefore an exception will be thrown.\n     *\n     * @param {Vector} subtrahend\n     * */\n\n  }, {\n    key: \"_subtractVector\",\n    value: function _subtractVector(subtrahend) {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].SubtractionOfVectorFromNumberException;\n    }\n  }]);\n\n  return GeneralNumber;\n}(mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"MathElement\"]);\n\n\n\n//# sourceURL=webpack:///./source/mathEngine/math/GeneralNumber.js?");

/***/ }),

/***/ "./source/mathEngine/math/MathElement.js":
/*!***********************************************!*\
  !*** ./source/mathEngine/math/MathElement.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MathElement; });\n/* harmony import */ var mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mathEngine/imports.js */ \"./source/mathEngine/imports.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n/**\n * General abstract class for storing a math element over an algebraic field.\n *\n * Known subtypes of this class are GeneralNumber (of which RealNumber, PrimeFieldNumber, F4Number, F8Number,\n * F9Number are subtypes), Matrix, Vector\n *\n * Do not create objects of this class but of their subtypes.\n *\n * The different available fields can be seen in Field.js\n *\n * @author David Augustat\n * */\n\nvar MathElement = /*#__PURE__*/function () {\n  /**\n   * The field on which the MathElement operates\n   *  @type {number}\n   *  */\n\n  /**\n   * The value that the math element holds (float value, matrix of GeneralNumber's, array of GeneralNumber's,...)\n   * @type {number | [[GeneralNumber]] | [GeneralNumber]}*/\n  function MathElement(field, value) {\n    _classCallCheck(this, MathElement);\n\n    _defineProperty(this, \"_field\", void 0);\n\n    _defineProperty(this, \"_value\", void 0);\n\n    this._field = field;\n    this._value = value;\n  }\n  /**\n   * @returns {number} The field on which the MathElement operates\n   * */\n\n\n  _createClass(MathElement, [{\n    key: \"multiplyWith\",\n\n    /**\n     * Multiplies a MathElement by another MathElement.\n     *\n     * @param {MathElement} factor Factor to multiply the current MathElement by\n     * @returns {MathElement} Result of the multiplication\n     * */\n    value: function multiplyWith(factor) {\n      var _this = this;\n\n      return this._doAccordingToElementType(factor, function () {\n        return _this._multiplyWithNumber(factor);\n      }, function () {\n        return _this._multiplyWithMatrix(factor);\n      }, function () {\n        return _this._multiplyWithVector(factor);\n      });\n    }\n    /**\n     * Adds a MathElement to another MathElement.\n     *\n     * @param {MathElement} summand Summand to add to the current MathElement\n     * @returns {MathElement} Result of the addition\n     * */\n\n  }, {\n    key: \"add\",\n    value: function add(summand) {\n      var _this2 = this;\n\n      return this._doAccordingToElementType(summand, function () {\n        return _this2._addNumber(summand);\n      }, function () {\n        return _this2._addMatrix(summand);\n      }, function () {\n        return _this2._addVector(summand);\n      });\n    }\n    /**\n     *  Subtracts a MathElement from another MathElement.\n     *\n     * @param {MathElement} subtrahend Subtrahend to subtract from the current MathElement\n     * @returns {MathElement} result of the division\n     * */\n\n  }, {\n    key: \"subtract\",\n    value: function subtract(subtrahend) {\n      var _this3 = this;\n\n      return this._doAccordingToElementType(subtrahend, function () {\n        return _this3._subtractNumber(subtrahend);\n      }, function () {\n        return _this3._subtractMatrix(subtrahend);\n      }, function () {\n        return _this3._subtractVector(subtrahend);\n      });\n    }\n    /**\n     * Divides a MathElement by another MathElement.\n     *\n     * Note that division cannot be applied on matrices and vectors!\n     *\n     * @param {MathElement} divisor Divisor to divide the current MathElement by\n     * @returns {MathElement} result of the division\n     * */\n\n  }, {\n    key: \"divideBy\",\n    value: function divideBy(divisor) {\n      var _this4 = this;\n\n      return this._doAccordingToElementType(divisor, function () {\n        return _this4._divideByNumber(divisor);\n      }, function () {\n        throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].DivisionByMatrixException;\n      }, function () {\n        throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].DivisionByVectorException;\n      });\n    }\n    /**\n     * Exponentiates a MathElement by a RealNumber\n     *\n     * @param {RealNumber} exponent This must be an integer >=0. Note that it must be a real number regardless of the current field.\n     * Exception: When the base is a RealNumber, the exponent can be any real number (also negative, float,...)\n     * @returns {MathElement} result of the exponentiation\n     * */\n\n  }, {\n    key: \"exponentiate\",\n    value: function exponentiate(exponent) {\n      if (!exponent instanceof mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"RealNumber\"] || exponent.value < 0 || !mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].numberIsInteger(exponent.value)) {\n        throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].InvalidExponentException;\n      }\n\n      var result = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].parseValueToFittingNumberObject(this.field, 1);\n\n      for (var i = 0; i < exponent.value; i++) {\n        result = result.multiplyWith(this);\n      }\n\n      return result;\n    }\n    /**\n     * Returns a human-readable string containing the MathElement's value\n     *\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].MethodNotImplementedException;\n    }\n    /**\n     * Returns LaTeX representation of the MathElement's value.\n     * Note that Latex math mode tags '\\\\(' and '\\\\)' or '\\\\[' and '\\\\]' are NOT included in this string\n     * to allow concatenation with other Latex string representations.\n     *\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"toLatex\",\n    value: function toLatex() {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].MethodNotImplementedException;\n    }\n    /**\n     * Returns a string representation of the MathElement's value that can be used as an input for the Interpreter.\n     * The string does NOT contain any special characters like greek letters.\n     *\n     * E.g. a MathElement containing Field.F4AlphaPlusOne returns \"a+1\".\n     *\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"toUserInputString\",\n    value: function toUserInputString() {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].MethodNotImplementedException;\n    }\n    /**\n     * Returns an equivalent MathElement object that is a copy of the current object\n     *\n     * @returns {MathElement}\n     * */\n\n  }, {\n    key: \"getCopy\",\n    value: function getCopy() {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].MethodNotImplementedException;\n    }\n    /**\n     * Generates an equivalent MathElement from a string representation in user-input-notation\n     *\n     * Note: This must be called on the desired subtype of MathElement! The type (number, matrix, vector)\n     * is NOT automatically detected.\n     *\n     * @param {number} field\n     * @param {string} text\n     * @returns {MathElement}\n     * */\n\n  }, {\n    key: \"_multiplyWithNumber\",\n    // internal functions that need to be overridden in subtypes:\n    // Following functions are not intended to be used as public methods:\n\n    /**\n     * @param {MathElement} factor\n     * @returns {MathElement}\n     * */\n    value: function _multiplyWithNumber(factor) {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].MethodNotImplementedException;\n    }\n    /**\n     * @param {MathElement} factor\n     * @returns {MathElement}\n     * */\n\n  }, {\n    key: \"_multiplyWithMatrix\",\n    value: function _multiplyWithMatrix(factor) {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].MethodNotImplementedException;\n    }\n    /**\n     * @param {MathElement} factor\n     * @returns {MathElement}\n     * */\n\n  }, {\n    key: \"_multiplyWithVector\",\n    value: function _multiplyWithVector(factor) {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].MethodNotImplementedException;\n    }\n    /**\n     * @param {MathElement} summand\n     * @returns {MathElement}\n     * */\n\n  }, {\n    key: \"_addNumber\",\n    value: function _addNumber(summand) {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].MethodNotImplementedException;\n    }\n    /**\n     * @param {MathElement} summand\n     * @returns {MathElement}\n     * */\n\n  }, {\n    key: \"_addMatrix\",\n    value: function _addMatrix(summand) {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].MethodNotImplementedException;\n    }\n    /**\n     * @param {MathElement} summand\n     * @returns {MathElement}\n     * */\n\n  }, {\n    key: \"_addVector\",\n    value: function _addVector(summand) {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].MethodNotImplementedException;\n    }\n    /**\n     * @param {MathElement} subtrahend\n     * @returns {MathElement}\n     * */\n\n  }, {\n    key: \"_subtractNumber\",\n    value: function _subtractNumber(subtrahend) {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].MethodNotImplementedException;\n    }\n    /**\n     * @param {MathElement} subtrahend\n     * @returns {MathElement}\n     * */\n\n  }, {\n    key: \"_subtractMatrix\",\n    value: function _subtractMatrix(subtrahend) {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].MethodNotImplementedException;\n    }\n    /**\n     * @param {MathElement} subtrahend\n     * @returns {MathElement}\n     * */\n\n  }, {\n    key: \"_subtractVector\",\n    value: function _subtractVector(subtrahend) {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].MethodNotImplementedException;\n    }\n    /**\n     * @param {MathElement} divisor\n     * @returns {MathElement}\n     * */\n\n  }, {\n    key: \"_divideByNumber\",\n    value: function _divideByNumber(divisor) {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].MethodNotImplementedException;\n    }\n    /**\n     * @param {MathElement} element\n     * @param {function(MathElement): MathElement} numberBehavior\n     * @param {function(MathElement): MathElement} matrixBehavior\n     * @param {function(MathElement): MathElement} vectorBehavior\n     * @returns {MathElement}\n     * */\n\n  }, {\n    key: \"_doAccordingToElementType\",\n    value: function _doAccordingToElementType(element, numberBehavior, matrixBehavior, vectorBehavior) {\n      if (element instanceof mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"GeneralNumber\"]) {\n        return numberBehavior(element);\n      } else if (element instanceof mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Matrix\"]) {\n        return matrixBehavior(element);\n      } else if (element instanceof mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Vector\"]) {\n        return vectorBehavior(element);\n      }\n    }\n  }, {\n    key: \"field\",\n    get: function get() {\n      return this._field;\n    }\n    /**\n     * @returns {number | [[GeneralNumber]] | [GeneralNumber]} The value that the math element holds\n     * (float value, matrix of GeneralNumber's, array of GeneralNumber's,...)\n     * */\n    ,\n\n    /**\n     * @param {number} value The field on which the MathElement operates\n     * */\n    set: function set(value) {\n      this._field = value;\n    }\n    /**\n     * @param {number | [[GeneralNumber]] | [GeneralNumber]} value The value that the math element should contain\n     * */\n\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    },\n    set: function set(value) {\n      this._value = value;\n    }\n  }], [{\n    key: \"fromString\",\n    value: function fromString(field, text) {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].MethodNotImplementedException;\n    }\n  }]);\n\n  return MathElement;\n}();\n\n\n\n//# sourceURL=webpack:///./source/mathEngine/math/MathElement.js?");

/***/ }),

/***/ "./source/mathEngine/math/Matrix.js":
/*!******************************************!*\
  !*** ./source/mathEngine/math/Matrix.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Matrix; });\n/* harmony import */ var mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mathEngine/imports.js */ \"./source/mathEngine/imports.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n/**\n A class that can store and manipulate a mathematical matrix over several fields.\n\n @author David Augustat\n */\n\nvar Matrix = /*#__PURE__*/function (_MathElement) {\n  _inherits(Matrix, _MathElement);\n\n  var _super = _createSuper(Matrix);\n\n  /** @type {number} */\n\n  /** @type {number} */\n\n  /**\n   * internally used field\n   * @type {[number]} */\n\n  /**\n   * @param {number} field\n   * @param {?[[GeneralNumber]]} value Numbers to be stored in the matrix (can be null)\n   * @param {?number} rows Number of rows of the matrix (if not set, default value is 0)\n   * @param {?number} columns Number of columns of the matrix (if not set, default value is 0)\n   * */\n  function Matrix() {\n    var _this;\n\n    var field = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].R;\n    var value = arguments.length > 1 ? arguments[1] : undefined;\n    var rows = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var columns = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n    _classCallCheck(this, Matrix);\n\n    _this = _super.call(this, field, value);\n\n    _defineProperty(_assertThisInitialized(_this), \"rows\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"columns\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_nonStepColumns\", void 0);\n\n    if (value !== null) {\n      _this.value = value;\n    } else {\n      _this.rows = rows;\n      _this.columns = columns;\n      _this.value = new Array(rows).fill(0).map(function () {\n        return new Array(columns).fill(0);\n      });\n    }\n\n    _this._nonStepColumns = [];\n    return _this;\n  }\n  /**\n   * Sets all values of all cells in the matrix  as an 2-dimensional array.\n   *\n   * @param {[[GeneralNumber]]} value\n   * */\n\n\n  _createClass(Matrix, [{\n    key: \"getRow\",\n\n    /**\n     * Returns an array of all values that are in the given row.\n     *\n     * @param {number} position\n     * @returns {[GeneralNumber]}\n     * */\n    value: function getRow(position) {\n      return this.value[position];\n    }\n    /**\n     * Returns an array of all values that are in the given column.\n     *\n     * @param {number} position\n     * @returns {[GeneralNumber]}\n     * */\n\n  }, {\n    key: \"getColumn\",\n    value: function getColumn(position) {\n      var column = [];\n      this.value.forEach(function (row) {\n        column.push(row[position]);\n      });\n      return column;\n    }\n    /**\n     * Returns the cell element of the cell at the given position.\n     *\n     * @param {number} rowPos\n     * @param {number} columnPos\n     * @returns {GeneralNumber}\n     * */\n\n  }, {\n    key: \"getCellValue\",\n    value: function getCellValue(rowPos, columnPos) {\n      return this.value[rowPos][columnPos];\n    }\n    /**\n     * @returns {number}\n     * */\n\n  }, {\n    key: \"getColumnCount\",\n    value: function getColumnCount() {\n      return this.columns;\n    }\n    /**\n     * @returns {number}\n     * */\n\n  }, {\n    key: \"getRowCount\",\n    value: function getRowCount() {\n      return this.rows;\n    }\n    /**\n     * Prints the matrix to the console\n     * */\n\n  }, {\n    key: \"print\",\n    value: function print() {\n      var output = \"\";\n      this.value.forEach(function (row) {\n        row.forEach(function (cellElement) {\n          output += cellElement.toString() + \"\\t\";\n        });\n        output += \"\\n\";\n      });\n      console.log(output);\n    }\n    /**\n     * Returns a human-readable string representation of the matrix.\n     *\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var output = \"\";\n      this.value.forEach(function (row) {\n        row.forEach(function (cellElement) {\n          output += cellElement.toString() + \"\\t\";\n        });\n        output += \"\\n\";\n      });\n      return output;\n    }\n    /**\n     * Returns a Latex representation of the matrix.\n     *\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"toLatex\",\n    value: function toLatex() {\n      var output = \"\\\\begin{pmatrix}\";\n      this.value.forEach(function (row) {\n        row.forEach(function (cellElement, index, array) {\n          if (index < array.length - 1) {\n            output += cellElement.toLatex() + \" & \";\n          } else {\n            output += cellElement.toLatex();\n          }\n        });\n        output += \"\\\\\\\\\";\n      });\n      output += \"\\\\end{pmatrix}\";\n      return output;\n    }\n    /**\n     * Returns a string representation of the matrix that can be used as an input for the Interpreter.\n     *\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"toUserInputString\",\n    value: function toUserInputString() {\n      var output = \"{\";\n      this.value.forEach(function (row) {\n        row.forEach(function (cellElement, index, array) {\n          if (index < array.length - 1) {\n            output += cellElement.toUserInputString() + \", \";\n          } else {\n            output += cellElement.toUserInputString();\n          }\n        });\n        output += \"; \";\n      });\n      output += \"}\";\n      return output;\n    }\n    /**\n     * Sets the value at a given position in the matrix.\n     *\n     * @param {number} rowPos\n     * @param {number} columnPos\n     * @param {GeneralNumber} value\n     * */\n\n  }, {\n    key: \"set\",\n    value: function set(rowPos, columnPos, value) {\n      this.value[rowPos][columnPos] = value;\n    }\n    /**\n     *  Returns a transposed variant of the matrix (rows and columns are swapped)\n     *\n     * @returns {Matrix}\n     * */\n\n  }, {\n    key: \"transpose\",\n    value: function transpose() {\n      var copy = this.getCopy();\n\n      copy._internalTranspose();\n\n      return copy;\n    }\n    /**\n     * Row reduces the matrix to reduced row-echelon-form.\n     *\n     * The matrix itself will not be modified by this, but only a copy of the current Matrix object.\n     *\n     * More information on that: https://en.wikipedia.org/wiki/Row_echelon_form#Reduced_row_echelon_form\n     *\n     * @returns {Matrix}\n     * */\n\n  }, {\n    key: \"rowReduce\",\n    value: function rowReduce() {\n      var copy = this.getCopy();\n\n      copy._internalRowReduce();\n\n      return copy;\n    }\n    /**\n     * Solves the matrix as an homogeneous equation system.\n     *\n     * The matrix itself will not be modified by this, but only a copy of the current Matrix object.\n     *\n     * Note: This is NOT an operation to be used in the normal Interpreter.js class, since it's return value is not\n     * a MathElement. Therefore it must be treated separately.\n     *\n     * @returns {{trivialSolution: Vector, vectorSolution: [Vector], rowReducedMatrix: Matrix}} Object that\n     * contains the trivial solution (Vector with only zeroes), the vector solution (if exists) and the row\n     * reduced matrix object, that has been created during the process.\n     * */\n\n  }, {\n    key: \"solveHomogeneousEquationSystem\",\n    value: function solveHomogeneousEquationSystem() {\n      var copy = this.getCopy();\n      return copy._internalSolveHomogeneousEquationSystem();\n    }\n    /**\n     * Internal method that multiplies the matrix with a constant.\n     *\n     * The matrix itself will not be modified by this, but only a copy of the current Matrix object.\n     *\n     * @param {GeneralNumber} factor\n     * @returns {Matrix}\n     * */\n\n  }, {\n    key: \"_multiplyWithNumber\",\n    value: function _multiplyWithNumber(factor) {\n      var result = this.getEmptyCopy();\n      this.value.forEach(function (row, rowPos) {\n        row.forEach(function (cellElement, columnPos) {\n          result.getRow(rowPos)[columnPos] = cellElement.multiplyWith(factor);\n        });\n      });\n      return result;\n    }\n    /**\n     * Internal method that multiplies the matrix with another matrix. The result is another matrix.\n     *\n     * The matrix itself will not be modified by this, but only a copy of the current Matrix object.\n     *\n     * Note that this only possible when the current matrix' column count is equal to the factor matrix' row count.\n     * If this is not the case, an exception will be thrown.\n     *\n     * @param {Matrix} factor\n     * */\n\n  }, {\n    key: \"_multiplyWithMatrix\",\n    value: function _multiplyWithMatrix(factor) {\n      if (this.getColumnCount() !== factor.getRowCount()) {\n        throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].MultiplicationOfMatricesWithInvalidDimensionsException;\n      }\n\n      var result = new Matrix(this.field, null, this.rows, factor.columns);\n\n      for (var rowPos = 0; rowPos < result.rows; rowPos++) {\n        for (var columnPos = 0; columnPos < result.columns; columnPos++) {\n          var sourceRow = this.getRow(rowPos);\n          var sourceColumn = factor.getColumn(columnPos);\n          result.set(rowPos, columnPos, this._multiplyRowWithColumn(sourceRow, sourceColumn));\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Internal method that multiplies the matrix with a vector. The result is a vector.\n     *\n     * The matrix itself will not be modified by this.\n     *\n     * Note that this is only possible, when the current matrix has the same number of columns as the vector has rows.\n     * If this is not the case, an exception will be thrown.\n     *\n     * @param {Vector} factor\n     * @returns {Vector}\n     * */\n\n  }, {\n    key: \"_multiplyWithVector\",\n    value: function _multiplyWithVector(factor) {\n      if (this.getColumnCount() !== factor.getSize()) {\n        throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].MultiplicationOfMatrixWithVectorWithInvalidDimensionsException;\n      }\n\n      var result = new mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Vector\"](this.field, null, 0);\n\n      for (var rowPos = 0; rowPos < this.rows; rowPos++) {\n        result.addRow(this._multiplyRowWithColumn(this.getRow(rowPos), factor.value));\n      }\n\n      return result;\n    }\n    /**\n     * Adding a number to a matrix is mathematically not possible. Therefore an exception will be thrown.\n     *\n     * @param {GeneralNumber} summand\n     * */\n\n  }, {\n    key: \"_addNumber\",\n    value: function _addNumber(summand) {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].AdditionOfNumberToMatrixException;\n    }\n    /**\n     * Internal method that adds another matrix to the current matrix.\n     *\n     * The matrix itself will not be modified by this, but only a copy of the current Matrix object.\n     *\n     * Note that this is only possible if the summand matrix has the same dimensions as the current matrix.\n     * If this is not the case, an exception will be thrown.\n     *\n     * @param {Matrix} summand\n     * @returns {Matrix}\n     * */\n\n  }, {\n    key: \"_addMatrix\",\n    value: function _addMatrix(summand) {\n      if (this.rows !== summand.rows || this.columns !== summand.columns) {\n        throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].AdditionOrSubtractionOfMatricesWithDifferentDimensionsException;\n      }\n\n      var result = this.getEmptyCopy();\n\n      for (var rowPos = 0; rowPos < this.rows; rowPos++) {\n        for (var columnPos = 0; columnPos < this.columns; columnPos++) {\n          var resultCellValue = this.value[rowPos][columnPos].add(summand.value[rowPos][columnPos]);\n          result.set(rowPos, columnPos, resultCellValue);\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Adding a vector to a matrix is mathematically not possible. Therefore an exception will be thrown.\n     *\n     * @param {GeneralNumber} summand\n     * */\n\n  }, {\n    key: \"_addVector\",\n    value: function _addVector(summand) {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].AdditionOfVectorToMatrixException;\n    }\n    /**\n     * Subtracting a number from a matrix is mathematically not possible. Therefore an exception will be thrown.\n     *\n     * @param {GeneralNumber} subtrahend\n     * */\n\n  }, {\n    key: \"_subtractNumber\",\n    value: function _subtractNumber(subtrahend) {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].SubtractionOfNumberFromMatrixException;\n    }\n    /**\n     * Internal method that subtracts another matrix from the current matrix.\n     *\n     * The matrix itself will not be modified by this, but only a copy of the current Matrix object.\n     *\n     * Note that this is only possible if the subtrahend matrix has the same dimensions as the current matrix.\n     * If this is not the case, an exception will be thrown.\n     *\n     * @param {Matrix} subtrahend\n     * @returns {Matrix}\n     * */\n\n  }, {\n    key: \"_subtractMatrix\",\n    value: function _subtractMatrix(subtrahend) {\n      var summand2Value = subtrahend.value.map(function (row) {\n        return row.map(function (cellElement) {\n          return cellElement.getAdditiveInverse();\n        });\n      });\n      return this._addMatrix(new Matrix(this.field, summand2Value));\n    }\n    /**\n     *  Internal method that multiplies a given row with a given column of the current matrix.\n     *\n     *  This method does not modify the current matrix.\n     *\n     * @param {[GeneralNumber]} row\n     * @param {[GeneralNumber]} column\n     * @returns {GeneralNumber}\n     * */\n\n  }, {\n    key: \"_multiplyRowWithColumn\",\n    value: function _multiplyRowWithColumn(row, column) {\n      var result = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].parseValueToFittingNumberObject(this.field, 0);\n\n      for (var pos = 0; pos < row.length; pos++) {\n        result = result._addNumber(row[pos].multiplyWith(column[pos]));\n      }\n\n      return result;\n    }\n    /**\n     * Internal method to transpose the matrix (swap rows and columns).\n     *\n     * Note that this method modifies the current matrix object.\n     * */\n\n  }, {\n    key: \"_internalTranspose\",\n    value: function _internalTranspose() {\n      var _this2 = this;\n\n      var transposed = new Array(this.columns).fill(0).map(function () {\n        return new Array(_this2.rows).fill(0);\n      });\n\n      for (var row = 0; row < this.rows; row++) {\n        for (var column = 0; column < this.columns; column++) {\n          transposed[column][row] = this.value[row][column];\n        }\n      }\n\n      this.value = transposed;\n      var _ref = [this.columns, this.rows];\n      this.rows = _ref[0];\n      this.columns = _ref[1];\n    }\n    /**\n     * Internal method that replies a given row with a constant factor.\n     *\n     * Note that this method modifies the current matrix object.\n     *\n     * @param {number} rowPos\n     * @param {GeneralNumber} factor\n     * */\n\n  }, {\n    key: \"_multiplyRow\",\n    value: function _multiplyRow(rowPos, factor) {\n      var row = this.value[rowPos];\n\n      for (var column = 0; column < this.columns; column++) {\n        //row[column] = this.field.multiply(row[column], factor);\n        row[column] = row[column].multiplyWith(factor);\n      }\n    }\n    /**\n     * Internal method that adds a row to another row .\n     *\n     * For each column, the value of the same column in the other row is added onto the target row.\n     *\n     * Note that this method modifies the current matrix object.\n     *\n     * @param {number} sourceRowPos\n     * @param {number} targetRowPos\n     * @param {GeneralNumber} factor\n     * */\n\n  }, {\n    key: \"_addRowToOther\",\n    value: function _addRowToOther(sourceRowPos, targetRowPos, factor) {\n      for (var column = 0; column < this.columns; column++) {\n        this.value[targetRowPos][column] = this.value[targetRowPos][column].add(this.value[sourceRowPos][column].multiplyWith(factor));\n      }\n    }\n    /**\n     * Reduces a column so that the value of (rowPos, columnPos) is 1 and all other values in the\n     * given column are 0.\n     *\n     * Note that this method modifies the current matrix object.\n     *\n     * @param {number} rowPos\n     * @param {number} columnPos\n     */\n\n  }, {\n    key: \"_reduceColumn\",\n    value: function _reduceColumn(rowPos, columnPos) {\n      var factor = this.value[rowPos][columnPos].getMultiplicativeInverse();\n\n      this._multiplyRow(rowPos, factor);\n\n      for (var row = 0; row < this.rows; row++) {\n        if (row !== rowPos) {\n          var rowFactor = this.value[row][columnPos].getAdditiveInverse();\n\n          this._addRowToOther(rowPos, row, rowFactor);\n        }\n      }\n    }\n    /**\n     * Internal method that moves a row to a different position in the matrix. The row that originally was on\n     * the target position of the row that is moved, will move downwards.\n     *\n     * Note that this method modifies the current matrix object.\n     *\n     * @param {number} rowPos\n     * @param {number} targetPos\n     */\n\n  }, {\n    key: \"_moveRow\",\n    value: function _moveRow(rowPos, targetPos) {\n      var cutOut = this.value.splice(rowPos, 1)[0];\n      this.value.splice(targetPos, 0, cutOut);\n    }\n    /**\n     * Internal method that row reduces the current matrix to extended row-echelon-form.\n     *\n     * Note that this method modifies the current matrix object.\n     * */\n\n  }, {\n    key: \"_internalRowReduce\",\n    value: function _internalRowReduce() {\n      var row = 0;\n      var column = 0;\n\n      while (row < this.rows && column < this.columns) {\n        if (this.value[row][column].value !== 0) {\n          this._reduceColumn(row, column);\n\n          row++;\n          column++;\n        } else {\n          var isCurrentPositionNotZero = this._moveRowWithoutZeroAtCurrentPosition(row, column);\n\n          if (!isCurrentPositionNotZero) {\n            this._nonStepColumns.push(column);\n\n            column++;\n          }\n        }\n      }\n    }\n    /**\n     * Internal method that tries to achieve that the current cell does not contain a zero.\n     *\n     * Note that this method modifies the current matrix object.\n     *\n     * This is done by moving rows from the bottom to the current row position, until the given cell does\n     * not contain a 0 anymore. If this is not possible the current cell will continue containing a zero and false\n     * will be returned.\n     *\n     * @param {number} rowPos\n     * @param {number} columnPos\n     * @returns {boolean} True if removing the 0 at the current position was successful. Otherwise false.\n     */\n\n  }, {\n    key: \"_moveRowWithoutZeroAtCurrentPosition\",\n    value: function _moveRowWithoutZeroAtCurrentPosition(rowPos, columnPos) {\n      var numMoves = 0;\n\n      while (this.value[rowPos][columnPos].value === 0 && numMoves < this.rows - rowPos - 1) {\n        this._moveRow(rowPos, this.rows - 1);\n\n        numMoves++;\n      }\n\n      return this.value[rowPos][columnPos].value !== 0;\n    }\n    /**\n     * Internal method that solves the current matrix as an homogeneous equation system.\n     *\n     * Note that this method modifies the current matrix object.\n     *\n     * @returns {{trivialSolution: Vector, vectorSolution: [Vector], rowReducedMatrix: Matrix}}\n     * */\n\n  }, {\n    key: \"_internalSolveHomogeneousEquationSystem\",\n    value: function _internalSolveHomogeneousEquationSystem() {\n      var _this3 = this;\n\n      var zeroNumber = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].parseValueToFittingNumberObject(this.field, 0);\n      var oneNumber = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].parseValueToFittingNumberObject(this.field, 1);\n      var solution = {\n        trivialSolution: new mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Vector\"](this.field, null, this.rows),\n        vectorSolution: [],\n        // Array of vectors\n        rowReducedMatrix: this\n      };\n\n      this._internalRowReduce();\n\n      this._nonStepColumns.forEach(function (currentNonStepColumnPos) {\n        var rowPos = 0;\n        var solutionVector = new mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Vector\"](_this3.field, null, 0);\n\n        for (var pos = 0; pos < _this3.columns; pos++) {\n          if (_this3._nonStepColumns.includes(pos)) {\n            if (pos === currentNonStepColumnPos) {\n              solutionVector.addRow(oneNumber);\n            } else {\n              solutionVector.addRow(zeroNumber);\n            }\n          } else {\n            solutionVector.addRow(_this3.value[rowPos][currentNonStepColumnPos].getAdditiveInverse());\n            rowPos++;\n          }\n        }\n\n        solution.vectorSolution.push(solutionVector);\n      });\n\n      return solution;\n    }\n    /**\n     * Returns an equivalent copy of the current Matrix object.\n     *\n     * @returns {Matrix}\n     * */\n\n  }, {\n    key: \"getCopy\",\n    value: function getCopy() {\n      var copyMatrix2 = new Matrix(this.field, null, this.rows, this.columns);\n\n      for (var rowPos = 0; rowPos < this.rows; rowPos++) {\n        for (var columnPos = 0; columnPos < this.columns; columnPos++) {\n          copyMatrix2.set(rowPos, columnPos, this.value[rowPos][columnPos]);\n        }\n      }\n\n      return copyMatrix2;\n    }\n    /**\n     * Returns a new matrix object that has the same dimensions and field as the current matrix, but the\n     * values are all 0.\n     *\n     * @returns {Matrix}\n     * */\n\n  }, {\n    key: \"getEmptyCopy\",\n    value: function getEmptyCopy() {\n      return new Matrix(this.field, null, this.rows, this.columns);\n    }\n    /**\n     * Creates a new Matrix object from a 2-dimensional array containing the number values\n     * (not GeneralNumber, but raw primitive values) that the matrix cells should be filled with.\n     *\n     * @param{number} field\n     * @param{[[number]]} data\n     * @returns {Matrix}\n     * */\n\n  }, {\n    key: \"value\",\n    set: function set(value) {\n      this._value = value;\n      this.rows = value.length;\n      this.columns = value[0].length;\n    }\n    /**\n     * Returns all values of all cells in the matrix as an 2-dimensional array.\n     *\n     * @returns {[[GeneralNumber]]}\n     * */\n    ,\n    get: function get() {\n      return this._value;\n    }\n  }], [{\n    key: \"fromRawData\",\n    value: function fromRawData(field, data) {\n      var resultData = [];\n      data.forEach(function (row) {\n        var resultRow = [];\n        row.forEach(function (cellValue) {\n          resultRow.push(mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].parseValueToFittingNumberObject(field, cellValue));\n        });\n        resultData.push(resultRow);\n      });\n      return new Matrix(field, resultData, 0, 0);\n    }\n    /**\n     * Creates a new Matrix object from a string representation of that matrix in user-input-notation.\n     *\n     * E.g. {1,2,3;4,5,6} is a valid input for this method when field == Field.R.\n     *\n     * @param {number} field\n     * @param {string} text\n     * @returns {Matrix}\n     * */\n\n  }, {\n    key: \"fromString\",\n    value: function fromString(field, text) {\n      text = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].removeSpacesAndLineBreaks(text);\n\n      if (!RegExp(mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].getMatrixRegex(field)).test(text)) {\n        throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].InvalidMatrixException;\n      }\n\n      text = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].removeCharacter(text, \"{\");\n      text = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].removeCharacter(text, \"}\");\n      var rows = text.split(\";\");\n      var matrixData = [];\n      var numColumns = 0;\n      rows.forEach(function (rowString) {\n        var rowStringValues = rowString.split(\",\");\n        var rowNumbers = [];\n        rowStringValues.forEach(function (stringValue) {\n          var numberValue = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].getNumberFromNumberString(field, stringValue);\n          rowNumbers.push(numberValue);\n        });\n\n        if (numColumns > 0 && rowNumbers.length !== numColumns) {\n          throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].UnequalAmountOfMatrixColumnsException;\n        }\n\n        numColumns = rowNumbers.length;\n        matrixData.push(rowNumbers);\n      });\n      return new Matrix(field, matrixData);\n    }\n  }]);\n\n  return Matrix;\n}(mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"MathElement\"]);\n\n\n\n//# sourceURL=webpack:///./source/mathEngine/math/Matrix.js?");

/***/ }),

/***/ "./source/mathEngine/math/PrimeFieldNumber.js":
/*!****************************************************!*\
  !*** ./source/mathEngine/math/PrimeFieldNumber.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return PrimeFieldNumber; });\n/* harmony import */ var mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mathEngine/imports.js */ \"./source/mathEngine/imports.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n/**\n * Class for storing numbers over an algebraic prime number finite field.\n *\n * Prime number finite fields are algebraic fields that have the same number of elements as a prime number.\n * E.g. F5 has 5 elements and is a prime number field because 5 is a prime number.\n *\n * Supported prime number fields are F2, F3, F5, F7, F11, F13, F17, F19.\n *\n * @author David Augustat\n * */\n\nvar PrimeFieldNumber = /*#__PURE__*/function (_GeneralNumber) {\n  _inherits(PrimeFieldNumber, _GeneralNumber);\n\n  var _super = _createSuper(PrimeFieldNumber);\n\n  /**\n   * @param {number} field The prime number finite field that should be used.\n   * Non-Prime-Fields like R or F4 are not allowed here!\n   * @param {number} value Can be any whole number, because it will be parsed to it's representative\n   * (e.g. 13 will be stored as 3 in F5)\n   * */\n  function PrimeFieldNumber(field, value) {\n    _classCallCheck(this, PrimeFieldNumber);\n\n    return _super.call(this, field, PrimeFieldNumber._valueToRepresentative(field, value));\n  }\n  /**\n   * Factor must be a prime field number over the same field\n   *\n   * @param {PrimeFieldNumber} factor\n   * @returns {PrimeFieldNumber}\n   * */\n\n\n  _createClass(PrimeFieldNumber, [{\n    key: \"_multiplyWithNumber\",\n    value: function _multiplyWithNumber(factor) {\n      return new PrimeFieldNumber(this.field, this.value * factor.value);\n    }\n    /**\n     * Summand must be a prime field number over the same field\n     *\n     * @param {PrimeFieldNumber} summand\n     * @returns {PrimeFieldNumber}\n     * */\n\n  }, {\n    key: \"_addNumber\",\n    value: function _addNumber(summand) {\n      return new PrimeFieldNumber(this.field, this.value + summand.value);\n    }\n    /**\n     * Subtrahend must be a prime field number over the same field\n     *\n     * @param {PrimeFieldNumber} subtrahend\n     * @returns {PrimeFieldNumber}\n     * */\n\n  }, {\n    key: \"_subtractNumber\",\n    value: function _subtractNumber(subtrahend) {\n      return new PrimeFieldNumber(this.field, this.value - subtrahend.value);\n    }\n    /**\n     * Divisor must be a prime field number over the same field\n     *\n     * @param {PrimeFieldNumber} divisor\n     * @returns {PrimeFieldNumber}\n     * */\n\n  }, {\n    key: \"_divideByNumber\",\n    value: function _divideByNumber(divisor) {\n      //return new PrimeFieldNumber(this.value / divisor.value);\n      return new PrimeFieldNumber(this.field, this.value * divisor.getMultiplicativeInverse().value);\n    }\n    /**\n     * Calculates the multiplicative inverse of the current PrimeFieldNumber object using the extended Euclidean algorithm.\n     *\n     *\n     * This is done by first executing the Euclidean algorithm which finds the greatest common divisor\n     * of the current value and the field number (e.g. for F5 the field number is 5). During the execution\n     * all calculated multiples are stored.\n     *\n     * Afterwards the stored values are used to find values for a and b so that the Equation\n     * value * a + fieldNumber * b = gcd(value, fieldValue) is saturated.\n     *\n     * See here for more details:\n     * https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm#Simple_algebraic_field_extensions\n     *\n     * @returns {PrimeFieldNumber}\n     * */\n\n  }, {\n    key: \"getMultiplicativeInverse\",\n    value: function getMultiplicativeInverse() {\n      // This method uses the Extended Euclidean Algorithm:\n      var multiples = [1]; // calculate greatest common divider while storing all used multiples:\n\n      var u1 = 0;\n      var u2 = this.field;\n      var u3 = this.value;\n\n      while (u3 > 0) {\n        u1 = u2;\n        u2 = u3;\n        u3 = u1 % u2;\n        multiples.push((u1 - u3) / u2);\n      }\n\n      multiples = multiples.reverse(); // use the stored multiples to find the prime field inverse\n\n      var wPrePrevious = 0;\n      var wPrevious = 0;\n      var wCurrent = 1;\n\n      for (var i = 0; i < multiples.length - 2; i++) {\n        wPrePrevious = wPrevious;\n        wPrevious = wCurrent;\n        wCurrent = wPrePrevious - multiples[i + 1] * wPrevious;\n      }\n\n      return new PrimeFieldNumber(this.field, this._valueToRepresentative(wCurrent));\n    }\n    /**\n     * Returns the additive inverse of the current prime field number.\n     *\n     * The additive inverse can easily be calculated by subtracting the current value from the field number.\n     *\n     * E.g. for F5: 5 - 4 = 1  -> 1 is the additive inverse of 4\n     *\n     * @returns {PrimeFieldNumber}\n     * */\n\n  }, {\n    key: \"getAdditiveInverse\",\n    value: function getAdditiveInverse() {\n      return new PrimeFieldNumber(this.field, this.field - this.value);\n    }\n    /**\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.value.toString();\n    }\n    /**\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"toUserInputString\",\n    value: function toUserInputString() {\n      return this.toString();\n    }\n    /**\n     * Returns an object that is identical to the current one, but not the same object.\n     *\n     * @returns {PrimeFieldNumber}\n     * */\n\n  }, {\n    key: \"getCopy\",\n    value: function getCopy() {\n      return new PrimeFieldNumber(this.field, this.value);\n    }\n  }, {\n    key: \"_valueToRepresentative\",\n    value: function _valueToRepresentative(value) {\n      return (value % this.field + this.field) % this.field;\n    }\n    /**\n     * This duplicate is necessary, because only static methods can be called as first call in constructor.\n     *\n     * @param {number} field;\n     * @param {number} value;\n     * @returns {number}\n     * */\n\n  }], [{\n    key: \"_valueToRepresentative\",\n    value: function _valueToRepresentative(field, value) {\n      return (value % field + field) % field;\n    }\n    /**\n     * @param {number} field\n     * @param {string} text\n     * @returns {PrimeFieldNumber}\n     * */\n\n  }, {\n    key: \"fromString\",\n    value: function fromString(field, text) {\n      var numberValue = parseInt(text);\n\n      if (isNaN(numberValue) || numberValue !== parseFloat(text)) {\n        throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].InvalidNumberException;\n      }\n\n      return new PrimeFieldNumber(field, numberValue);\n    }\n  }]);\n\n  return PrimeFieldNumber;\n}(mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"GeneralNumber\"]);\n\n\n\n//# sourceURL=webpack:///./source/mathEngine/math/PrimeFieldNumber.js?");

/***/ }),

/***/ "./source/mathEngine/math/RealNumber.js":
/*!**********************************************!*\
  !*** ./source/mathEngine/math/RealNumber.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return RealNumber; });\n/* harmony import */ var mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mathEngine/imports.js */ \"./source/mathEngine/imports.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n/**\n * Class for storing numbers in the real-number field.\n *\n * The real-number field is the only non-finite field supported by this tool.\n *\n * @author David Augustat\n * */\n\nvar RealNumber = /*#__PURE__*/function (_GeneralNumber) {\n  _inherits(RealNumber, _GeneralNumber);\n\n  var _super = _createSuper(RealNumber);\n\n  /**\n   * @param {number} value\n   * */\n  function RealNumber(value) {\n    _classCallCheck(this, RealNumber);\n\n    return _super.call(this, mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].R, value);\n  }\n  /**\n   * @param {RealNumber} factor\n   * @returns {RealNumber}\n   * */\n\n\n  _createClass(RealNumber, [{\n    key: \"_multiplyWithNumber\",\n    value: function _multiplyWithNumber(factor) {\n      return new RealNumber(this.value * factor.value);\n    }\n    /**\n     * @param {RealNumber} summand\n     * @returns {RealNumber}\n     * */\n\n  }, {\n    key: \"_addNumber\",\n    value: function _addNumber(summand) {\n      return new RealNumber(this.value + summand.value);\n    }\n    /**\n     * @param {RealNumber} subtrahend\n     * @returns {RealNumber}\n     * */\n\n  }, {\n    key: \"_subtractNumber\",\n    value: function _subtractNumber(subtrahend) {\n      return new RealNumber(this.value - subtrahend.value);\n    }\n    /**\n     * @param {RealNumber} divisor\n     * @returns {RealNumber}\n     * */\n\n  }, {\n    key: \"_divideByNumber\",\n    value: function _divideByNumber(divisor) {\n      return new RealNumber(this.value / divisor.value);\n    }\n    /**\n     * @param {RealNumber} exponent For real numbers, the exponent can be any real number. Doesn't need to be an Integer or >= 0.\n     * @returns {RealNumber}\n     * */\n\n  }, {\n    key: \"exponentiate\",\n    value: function exponentiate(exponent) {\n      return new RealNumber(Math.pow(this.value, exponent.value));\n    }\n    /**\n     * @returns {RealNumber}\n     * */\n\n  }, {\n    key: \"getMultiplicativeInverse\",\n    value: function getMultiplicativeInverse() {\n      if (this.value === 0) {\n        throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].DivisionByZeroException;\n      }\n\n      return new RealNumber(1 / this.value);\n    }\n    /**\n     * @returns {RealNumber}\n     * */\n\n  }, {\n    key: \"getAdditiveInverse\",\n    value: function getAdditiveInverse() {\n      return new RealNumber(mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].preventNegativeZero(-this.value));\n    }\n    /**\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].round(this.value, 4);\n    }\n    /**\n     * Note: Number will NOT be rounded here to maximize precision when using this output as an input again.\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"toUserInputString\",\n    value: function toUserInputString() {\n      return this.value.toString();\n    }\n    /**\n     * Returns an object that is identical to the current one, but not the same object.\n     *\n     * @returns {RealNumber}\n     * */\n\n  }, {\n    key: \"getCopy\",\n    value: function getCopy() {\n      return new RealNumber(this.value);\n    }\n    /**\n     * @param {number} field\n     * @param {string} text\n     * @returns {RealNumber}\n     * */\n\n  }], [{\n    key: \"fromString\",\n    value: function fromString(field, text) {\n      var numberValue = parseFloat(text);\n\n      if (isNaN(numberValue)) {\n        throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].InvalidNumberException;\n      }\n\n      return new RealNumber(numberValue);\n    }\n  }]);\n\n  return RealNumber;\n}(mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"GeneralNumber\"]);\n\n\n\n//# sourceURL=webpack:///./source/mathEngine/math/RealNumber.js?");

/***/ }),

/***/ "./source/mathEngine/math/Vector.js":
/*!******************************************!*\
  !*** ./source/mathEngine/math/Vector.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Vector; });\n/* harmony import */ var mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mathEngine/imports.js */ \"./source/mathEngine/imports.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n/**\n * Class for storing and manipulating a mathematical vector over an algebraic field.\n *\n * @author David Augustat\n * */\n\nvar Vector = /*#__PURE__*/function (_MathElement) {\n  _inherits(Vector, _MathElement);\n\n  var _super = _createSuper(Vector);\n\n  /** @type {number} */\n\n  /**\n   * @param {number} field\n   * @param {[GeneralNumber]} value\n   * @param {number} size\n   * */\n  function Vector() {\n    var _this;\n\n    var field = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].R;\n    var value = arguments.length > 1 ? arguments[1] : undefined;\n    var size = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    _classCallCheck(this, Vector);\n\n    _this = _super.call(this, field, value);\n\n    _defineProperty(_assertThisInitialized(_this), \"size\", void 0);\n\n    if (value !== null) {\n      _this.value = value;\n    } else {\n      _this.value = new Array(size).fill(mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].parseValueToFittingNumberObject(field, 0));\n      _this.size = size;\n    }\n\n    return _this;\n  }\n  /**\n   * Sets all row values in the vector as an array.\n   *\n   * @param {[GeneralNumber]} value\n   * */\n\n\n  _createClass(Vector, [{\n    key: \"getRow\",\n\n    /**\n     * Returns the value of the given row position.\n     *\n     * @returns {GeneralNumber}\n     * */\n    value: function getRow(rowPos) {\n      return this.value[rowPos];\n    }\n    /**\n     * Sets the provided value at the given row position\n     *\n     * @param {number} rowPos\n     * @param {GeneralNumber} value\n     * */\n\n  }, {\n    key: \"set\",\n    value: function set(rowPos, value) {\n      this.value[rowPos] = value;\n    }\n    /**\n     * Returns the number of rows in the current vector.\n     *\n     * @returns {number}\n     * */\n\n  }, {\n    key: \"getSize\",\n    value: function getSize() {\n      return this.size;\n    }\n    /**\n     * Returns a Matrix object that is equivalent to the current vector.\n     *\n     * The matrix has 1 column and as many rows as the vector has.\n     *\n     * @returns {Matrix}\n     * */\n\n  }, {\n    key: \"toMatrix\",\n    value: function toMatrix() {\n      var matrix = new mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Matrix\"](this.field, null, 1, this.size);\n      matrix.value = [this.value];\n      return matrix.transpose();\n    }\n    /**\n     * Adds a row to the vector at the bottommost position. The vector size will increase by this.\n     *\n     * Note that this method modifies the current vector object.\n     *\n     * @param {GeneralNumber} value\n     * */\n\n  }, {\n    key: \"addRow\",\n    value: function addRow(value) {\n      this.value.push(value);\n      this.size = this.value.length;\n    }\n    /**\n     * Prints a string representation of the current vector to the console.\n     * */\n\n  }, {\n    key: \"print\",\n    value: function print() {\n      var output = \"\";\n      this.value.forEach(function (rowElement) {\n        output += rowElement.toString() + \"\\n\";\n      });\n      console.log(output);\n    }\n    /**\n     * Multiplies all values in the vector with a constant.\n     * This will not modify the current vector but only a copy of it.\n     *\n     * @param {GeneralNumber} factor\n     * @returns {Vector}\n     * */\n\n  }, {\n    key: \"_multiplyWithNumber\",\n    value: function _multiplyWithNumber(factor) {\n      var resultValue = this.value.map(function (number) {\n        return number.multiplyWith(factor);\n      });\n      return new Vector(this.field, resultValue, 0);\n    }\n    /**\n     * The multiplication of a vector by a matrix is mathematically not possible.\n     * Therefore an exception will be thrown.\n     *\n     * Note that the other way around (Matrix * Vector) is allowed.\n     *\n     * @param {Matrix} factor\n     * */\n\n  }, {\n    key: \"_multiplyWithMatrix\",\n    value: function _multiplyWithMatrix(factor) {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].MultiplicationOfVectorByMatrixException;\n    }\n    /**\n     * Multiplies the current vector with another vector.\n     *\n     * This is done by multiplying each row of the first vector by the according row of the second vector and\n     * then adding all multiplied rows together. The result will be a number.\n     *\n     * Note that this is only possible, if both vectors have the same size. If they don't, an exception will\n     * be thrown.\n     *\n     * @param {Vector} factor\n     * @returns {GeneralNumber}\n     * */\n\n  }, {\n    key: \"_multiplyWithVector\",\n    value: function _multiplyWithVector(factor) {\n      if (this.size !== factor.size) {\n        throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].MultiplicationOfVectorsWrongDimensionsException;\n      }\n\n      var result = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].parseValueToFittingNumberObject(this.field, 0);\n\n      for (var rowPos = 0; rowPos < this.size; rowPos++) {\n        result = result.add(this.getRow(rowPos).multiplyWith(factor.getRow(rowPos)));\n      }\n\n      return result;\n    }\n    /**\n     * Adding a number to a vector is mathematically not possible. Therefore an exception will be thrown.\n     *\n     * @param {GeneralNumber} summand\n     * */\n\n  }, {\n    key: \"_addNumber\",\n    value: function _addNumber(summand) {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].AdditionOfNumberToVectorException;\n    }\n    /**\n     * Adding a matrix to a vector is mathematically not possible. Therefore an exception will be thrown.\n     *\n     * @param {Matrix} summand\n     * */\n\n  }, {\n    key: \"_addMatrix\",\n    value: function _addMatrix(summand) {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].AdditionOfMatrixToVectorException;\n    }\n    /**\n     * Adds one vector to another one by adding the rows accordingly. The result will be a vector of same size.\n     *\n     * Note that this is only possible, if both vectors have the same size. If they don't, an exception will\n     * be thrown.\n     *\n     * @param {Vector} summand\n     * @return {Vector}\n     * */\n\n  }, {\n    key: \"_addVector\",\n    value: function _addVector(summand) {\n      if (summand.size !== this.size) {\n        throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].AdditionOfVectorsWrongDimensionsException;\n      }\n\n      var result = new Vector(this.field, null, 0);\n\n      for (var rowPos = 0; rowPos < this.size; rowPos++) {\n        result.addRow(this.value[rowPos].add(summand.value[rowPos]));\n      }\n\n      return result;\n    }\n    /**\n     * Subtracting a number from a vector is mathematically not possible. Therefore an exception will be thrown.\n     *\n     * @param {GeneralNumber} subtrahend\n     * */\n\n  }, {\n    key: \"_subtractNumber\",\n    value: function _subtractNumber(subtrahend) {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].SubtractionOfNumberFromVectorException;\n    }\n    /**\n     * Subtracting a matrix from a vector is mathematically not possible. Therefore an exception will be thrown.\n     *\n     * @param {Matrix} subtrahend\n     * */\n\n  }, {\n    key: \"_subtractMatrix\",\n    value: function _subtractMatrix(subtrahend) {\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].SubtractionOfMatrixFromVectorException;\n    }\n    /**\n     * Subtracts a vector from another one. The result will be a vector of same size.\n     *\n     * Note that this is only possible, if both vectors have the same size. If they don't, an exception will\n     * be thrown.\n     *\n     * @param {Vector} subtrahend\n     * @return {Vector}\n     * */\n\n  }, {\n    key: \"_subtractVector\",\n    value: function _subtractVector(subtrahend) {\n      var summand2Value = subtrahend.value.map(function (number) {\n        return number.getAdditiveInverse();\n      });\n      return this._addVector(new Vector(subtrahend.field, summand2Value));\n    }\n    /**\n     * Returns a human-readable string representation of the vector.\n     *\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var output = \"\";\n      this.value.forEach(function (rowElement) {\n        output += rowElement.toString() + \"\\n\";\n      });\n      return output;\n    }\n    /**\n     * Returns a Latex representation of the vector.\n     *\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"toLatex\",\n    value: function toLatex() {\n      var output = \"\\\\begin{pmatrix}\";\n      this.value.forEach(function (number) {\n        output += number.toLatex() + \"\\\\\\\\\";\n      });\n      output += \"\\\\end{pmatrix}\";\n      return output;\n    }\n    /**\n     * Returns a string representation of the vector that can be used as an input for the Interpreter.\n     *\n     * @returns {string}\n     * */\n\n  }, {\n    key: \"toUserInputString\",\n    value: function toUserInputString() {\n      var _this2 = this;\n\n      var output = \"[\";\n      this.value.forEach(function (number, index, array) {\n        if (index < _this2.value.length - 1) {\n          output += number.toUserInputString() + \", \";\n        } else {\n          output += number.toUserInputString();\n        }\n      });\n      output += \"]\";\n      return output;\n    }\n    /**\n     * Returns an equivalent copy of the current Vector object.\n     *\n     * @returns {Vector}\n     * */\n\n  }, {\n    key: \"getCopy\",\n    value: function getCopy() {\n      var resultValue = this.value.map(function (value) {\n        return value.getCopy();\n      });\n      return new Vector(this.field, resultValue);\n    }\n    /**\n     * Creates a new Vector object from an array containing the number values\n     * (not GeneralNumber, but raw primitive values) that the vector rows should be filled with.\n     *\n     * @param {number} field\n     * @param {[number]} data\n     * @returns {Vector}\n     * */\n\n  }, {\n    key: \"value\",\n    set: function set(value) {\n      this._value = value;\n      this.size = value.length;\n    }\n    /**\n     * Returns all row values in the vector as an array.\n     *\n     * @returns {[GeneralNumber]}\n     * */\n    ,\n    get: function get() {\n      return this._value;\n    }\n  }], [{\n    key: \"fromRawData\",\n    value: function fromRawData(field, data) {\n      var resultData = data.map(function (number) {\n        return mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].parseValueToFittingNumberObject(field, number);\n      });\n      return new Vector(field, resultData);\n    }\n    /**\n     * Creates a new Vector object from a string representation of that vector in user-input-notation.\n     *\n     * E.g. [1,2,3,4] is a valid input for this method when field == Field.R\n     *\n     * @param {string} text\n     * @param {number} field\n     * @returns {Vector}\n     * */\n\n  }, {\n    key: \"fromString\",\n    value: function fromString(field, text) {\n      text = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].removeSpacesAndLineBreaks(text);\n\n      if (!RegExp(mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].getVectorRegex(field)).test(text)) {\n        throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].InvalidVectorException;\n      }\n\n      text = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].removeCharacter(text, \"[\");\n      text = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].removeCharacter(text, \"]\");\n      var rows = text.split(\",\");\n      var vectorValues = rows.map(function (elementString) {\n        return mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].getNumberFromNumberString(field, elementString);\n      });\n      return new Vector(field, vectorValues);\n    }\n  }]);\n\n  return Vector;\n}(mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"MathElement\"]);\n\n\n\n//# sourceURL=webpack:///./source/mathEngine/math/Vector.js?");

/***/ }),

/***/ "./source/mathEngine/stringInterpretation/ExpressionNode.js":
/*!******************************************************************!*\
  !*** ./source/mathEngine/stringInterpretation/ExpressionNode.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ExpressionNode; });\n/* harmony import */ var mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mathEngine/imports.js */ \"./source/mathEngine/imports.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n/**\n * Class that represents a node of a binary tree that can store mathematical expressions.\n * Each node can have one of the following structures:\n *\n * - The node is a double-outgoing intermediate node, meaning it has two outgoing nodes and and operator. The left and\n * right nodes are sub-expressions, that are conjugated by the operator. E.g. when the left node holds the expression\n * (2+3) and the right node holds the expression (4+5) and the operator is '*', then the current node represents the\n * expression (2+3)*(4+5).\n *\n * - The node is a single-outgoing intermediate node, meaning it only has one outgoing node and an operator.\n * In this case, the left branch must contain the single outgoing node. This structure can be used for function\n * operators that only have one expression as parameter.\n * E.g. rowreduce({1,2:3,4}) is such a case, where rowreduce is the function operator and the contained matrix\n * is the single parameter.\n *\n * - The node is a terminal (leaf), meaning it only holds a single MathElement object (e.g. a RealNumber).\n *\n * @author David Augustat\n * */\n\nvar ExpressionNode = /*#__PURE__*/function () {\n  /**\n   * The left ExpressionNode containing the sub-expression before the operator\n   * @type {ExpressionNode} */\n\n  /**\n   * The right ExpressionNode containing the sub-expression after the operator\n   * @type {ExpressionNode} */\n\n  /**\n   * The character of the operator used (+, -, ...). Must be an element of Operators in Constants.js\n   * @type {string} */\n\n  /**\n   * The number that is stored in a leaf node (if the node is a leaf node)\n   * @type {MathElement} */\n\n  /**\n   * indicates if the current node is a leaf\n   * @type {boolean} */\n\n  /**\n   * Indicates if the current node only has one outgoing node. In this case, the only outgoing node MUST be\n   * the left node.\n   * @type {boolean} */\n\n  /**\n   * @param {?ExpressionNode} leftNode\n   * @param {?ExpressionNode} rightNode\n   * @param {?string} operator\n   * @param {?MathElement} terminalElement\n   * */\n  function ExpressionNode(leftNode, rightNode, operator, terminalElement) {\n    _classCallCheck(this, ExpressionNode);\n\n    _defineProperty(this, \"leftNode\", void 0);\n\n    _defineProperty(this, \"rightNode\", void 0);\n\n    _defineProperty(this, \"operator\", void 0);\n\n    _defineProperty(this, \"terminalElement\", void 0);\n\n    _defineProperty(this, \"isTerminal\", void 0);\n\n    _defineProperty(this, \"isSingleBranchNode\", void 0);\n\n    this.leftNode = leftNode;\n    this.rightNode = rightNode;\n    this.operator = operator;\n    this.terminalElement = terminalElement;\n    this.isTerminal = terminalElement != null;\n    this.isSingleBranchNode = leftNode != null && rightNode == null;\n  }\n  /**\n   * Calculates the result of the current node by recursively calculating the results of the left and\n   * right nodes attached to this node and then combines them using the operator specified in the node.\n   *\n   * @returns {MathElement}\n   * */\n\n\n  _createClass(ExpressionNode, [{\n    key: \"calculate\",\n    value: function calculate() {\n      if (this.isTerminal) {\n        return this.terminalElement;\n      } else {\n        switch (this.operator) {\n          case mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Operators\"].ADD:\n            return this.leftNode.calculate().add(this.rightNode.calculate());\n\n          case mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Operators\"].MULTIPLY:\n            return this.leftNode.calculate().multiplyWith(this.rightNode.calculate());\n\n          case mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Operators\"].SUBTRACT:\n            return this.leftNode.calculate().subtract(this.rightNode.calculate());\n\n          case mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Operators\"].DIVIDE:\n            return this.leftNode.calculate().divideBy(this.rightNode.calculate());\n\n          case mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Operators\"].EXPONENTIATE:\n            return this.leftNode.calculate().exponentiate(this.rightNode.calculate());\n\n          case mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Operators\"].ROW_REDUCE:\n            return this._rowReduce();\n\n          default:\n            throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].InvalidOperatorException;\n        }\n      }\n    }\n    /**\n     * Internal method to check if the left node is a matrix. If it is, a copy of the matrix in row-echelon-form\n     * will be returned. Otherwise an exception will be thrown, because only matrices can be row-reduced.\n     *\n     * @returns {Matrix}\n     * */\n\n  }, {\n    key: \"_rowReduce\",\n    value: function _rowReduce() {\n      var innerValue = this.leftNode.calculate();\n\n      if (innerValue instanceof mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Matrix\"]) {\n        return innerValue.rowReduce();\n      }\n\n      throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].RowReduceNotAMatrixException;\n    }\n  }]);\n\n  return ExpressionNode;\n}();\n\n\n\n//# sourceURL=webpack:///./source/mathEngine/stringInterpretation/ExpressionNode.js?");

/***/ }),

/***/ "./source/mathEngine/stringInterpretation/InputToLatexConverter.js":
/*!*************************************************************************!*\
  !*** ./source/mathEngine/stringInterpretation/InputToLatexConverter.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return InputToLatexConverter; });\n/* harmony import */ var mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mathEngine/imports.js */ \"./source/mathEngine/imports.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n/**\n * Class that converts a valid string in user-input-notation into an equivalent latex representation, so that\n * it can be displayed to the user together with the result of the calculation.\n *\n * @author David Augustat\n * */\n\nvar InputToLatexConverter = /*#__PURE__*/function () {\n  function InputToLatexConverter() {\n    _classCallCheck(this, InputToLatexConverter);\n  }\n\n  _createClass(InputToLatexConverter, [{\n    key: \"toLatex\",\n\n    /**\n     * Converts a user input into an equivalent latex math expression and returns it.\n     *\n     * Note that the string MUST be a valid string in user-input-notation. If the string is invalid, this converter\n     * might behave unintended.\n     *\n     * @param {string} text\n     * @returns {string}\n     * */\n    value: function toLatex(text) {\n      text = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].removeSpacesAndLineBreaks(text);\n      text = this._convertFieldNumberStrings(text);\n      text = this._convertMatrices(text);\n      text = this._convertVectors(text);\n      text = this._convertExponentiatedParenthesis(text);\n      return text;\n    }\n    /**\n     * Internal method that finds matrices in user-input-notation in a string and replaces them with the Latex\n     * notation for matrices.\n     *\n     * If no matrices are contained in the input string, the output will be equal to the input.\n     *\n     * @param {string} text String in user-input-notation\n     * @returns string String with matrices converted to Latex notation\n     * */\n\n  }, {\n    key: \"_convertMatrices\",\n    value: function _convertMatrices(text) {\n      var _this = this;\n\n      var textSplitByMatrices = this._splitByParenthesis(text, '{', '}');\n\n      var convertedSubstrings = textSplitByMatrices.map(function (substring) {\n        if (substring.startsWith('{')) {\n          var curlyBracketsRegex = /([{},;])/g;\n          var replaceMap = {\n            \"{\": \"\\\\begin{pmatrix}\",\n            \"}\": \"\\\\end{pmatrix}\",\n            \",\": \" & \",\n            \";\": \" \\\\\\\\ \"\n          };\n          return _this._replaceMultiple(substring, curlyBracketsRegex, replaceMap);\n        } else {\n          return substring;\n        }\n      });\n      return convertedSubstrings.join('');\n    }\n    /**\n     * Internal method that finds vectors in user-input-notation in a string and replaces them with the Latex\n     * notation for vectors.\n     *\n     * If no vectors are contained in the input string, the output will be equal to the input.\n     *\n     * @param {string} text String in user-input-notation\n     * @returns string String with vectors converted to Latex notation\n     * */\n\n  }, {\n    key: \"_convertVectors\",\n    value: function _convertVectors(text) {\n      var _this2 = this;\n\n      var textSplitByVectors = this._splitByParenthesis(text, '[', ']');\n\n      var convertedSubstrings = textSplitByVectors.map(function (substring) {\n        if (substring.startsWith('[')) {\n          var curlyBracketsRegex = /([\\[\\],])/g;\n          var replaceMap = {\n            \"[\": \"\\\\begin{pmatrix}\",\n            \"]\": \"\\\\end{pmatrix}\",\n            \",\": \" \\\\\\\\ \"\n          };\n          return _this2._replaceMultiple(substring, curlyBracketsRegex, replaceMap);\n        } else {\n          return substring;\n        }\n      });\n      return convertedSubstrings.join('');\n    }\n    /**\n     * Internal method that finds field numbers of the fields F4, F8 and F9, in user-input-notation in a string,\n     * and converts them to their equivalent Latex representation.\n     *\n     * E.g. 1*(a+1) is converted to 1*(α+1)\n     *\n     * If no such numbers are contained in the input string, the output will be equal to the input.\n     *\n     * @param {string} text String in user-input-notation\n     * @returns string String with F4, F8 and F9 numbers converted to Latex notation\n     * */\n\n  }, {\n    key: \"_convertFieldNumberStrings\",\n    value: function _convertFieldNumberStrings(text) {\n      var splitByFunctionOperators = this._splitByFunctionOperators(text);\n\n      var convertedSubstrings = splitByFunctionOperators.map(function (substring) {\n        if (mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Constants\"].functionOperators.includes(substring)) {\n          return substring;\n        } else {\n          return substring.replace(/a/g, 'α').replace(/bs/g, 'β^2').replace(/b/g, 'β').replace(/j/g, 'ι');\n        }\n      });\n      return convertedSubstrings.join();\n    }\n    /**\n     * Fixes the problem that with exponentiated expressions in round brackets only the first bracket will be shown as\n     * the exponent.\n     *\n     * For example in 2^(4+6) only the '(' will be marked as an exponent. To fix this, the outermost round brackets are\n     * replaced by curly brackets, e.g. 2\\^(4\\*(5+6)) becomes 2\\^{4\\*(5+6)}.\n     *\n     * If no exponentiated parenthesis is contained in the input string, the output will be equal to the input.\n     *\n     * @param {string} text String in user-input-notation\n     * @returns {string} String with exponentiated parenthesis converted to Latex notation\n     * */\n\n  }, {\n    key: \"_convertExponentiatedParenthesis\",\n    value: function _convertExponentiatedParenthesis(text) {\n      var textSplitByExponentiatedParenthesis = this._splitByExponentiatedParenthesis(text);\n\n      var convertedSubstrings = textSplitByExponentiatedParenthesis.map(function (substring) {\n        if (substring.startsWith(\"^\")) {\n          return \"^{\" + substring.substring(2, substring.length - 1) + \"}\";\n        } else {\n          return substring;\n        }\n      });\n      return convertedSubstrings.join('');\n    }\n    /**\n     * Skims a string for exponentiated expression in brackets and splits the string in a way that the exponentiation sign\n     * together with the exponentiated bracket is separated from the rest of the string. The entire string is then\n     * returned as an array consisting of normal expression parts and the extracted parts.\n     *\n     * e.g. \"5+2\\^(5+7)-9\" will result in [\"5+\", \"2\\^(5+7)\", \"-9\"]\n     *\n     * @param {string} text\n     * @returns {[string]}\n     * */\n\n  }, {\n    key: \"_splitByExponentiatedParenthesis\",\n    value: function _splitByExponentiatedParenthesis(text) {\n      var textSplitByExponentiation = [];\n      var lastSplitPosition = 0;\n      var roundBracketLevel = 0;\n\n      for (var i = 0; i < text.length; i++) {\n        var currentChar = text.charAt(i);\n\n        if (text.startsWith(\"^(\", i)) {\n          textSplitByExponentiation.push(text.substring(lastSplitPosition, i));\n          lastSplitPosition = i;\n        } else if (currentChar === '(') {\n          roundBracketLevel++;\n        } else if (currentChar === ')') {\n          roundBracketLevel--;\n\n          if (roundBracketLevel === 0) {\n            textSplitByExponentiation.push(text.substring(lastSplitPosition, i + 1));\n            lastSplitPosition = i + 1;\n          }\n        }\n      }\n\n      textSplitByExponentiation.push(text.substring(lastSplitPosition));\n      return textSplitByExponentiation;\n    }\n    /**\n     * splits a string at opening and closing bracket position, so that the\n     * opening and closing brackets are attached to the string that is inside them.\n     *\n     * e.g. \"5\\*(3+6)-7\" becomes \"5*\", \"(3+6), \"-7\" given that openingBracketChar == '(' and closingBracketChar == ')'\n     *\n     * @param {string} text The text to split in user-input-notation\n     * @param {string} openingBracketChar The character that should be used as opening bracket\n     * @param {string} closingBracketChar The character that should be used as closing bracket\n     * @returns {[string]} An array of the individual parts of the original string\n     * */\n\n  }, {\n    key: \"_splitByParenthesis\",\n    value: function _splitByParenthesis(text, openingBracketChar, closingBracketChar) {\n      var result = [];\n      var lastSplitPosition = 0;\n\n      for (var i = 0; i < text.length; i++) {\n        var currentChar = text.charAt(i);\n\n        if (currentChar === openingBracketChar) {\n          var textBeforeParenthesis = text.substring(lastSplitPosition, i);\n          result.push(textBeforeParenthesis);\n          lastSplitPosition = i;\n        } else if (currentChar === closingBracketChar) {\n          var textInsideParenthesis = text.substring(lastSplitPosition, i + 1);\n          result.push(textInsideParenthesis);\n          lastSplitPosition = i + 1;\n        }\n      }\n\n      result.push(text.substring(lastSplitPosition, text.length));\n      return result;\n    }\n    /**\n     * Splits a string in user-input-notation by all occurring function operators (e.g. rowreduce) and returns\n     * an array of the separated string parts.\n     *\n     * For example \"5*rowreduce({1,2;3,4})\" will be converted to [\"5*\", \"rowreduce\", \"({1,2;3,4})\"]\n     *\n     * @param {string} text The text to split in user-input-notation\n     * @returns {[string]} Array of the parts that the input string consists of.\n     * */\n\n  }, {\n    key: \"_splitByFunctionOperators\",\n    value: function _splitByFunctionOperators(text) {\n      var functionOperatorsRegex = \"(\" + mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Constants\"].functionOperators.join(\"|\") + \")\";\n      return text.split(RegExp(functionOperatorsRegex));\n    }\n    /**\n     * Replaces multiple substrings in a string by different replacement strings.\n     *\n     * E.g. every 'a' should be replaced with a 'b' and every 'b' should be replaced with a 'c'.\n     *\n     * @param {string} text The text to execute the replacement on\n     * @param {RegExp} replaceRegex A regex that matches every substring that should be replaced.\n     * Note that the regex must contain the global modifier (/.../g) if EVERY occurrence of the substring should be\n     * replaced. Otherwise only the first occurrence will be replaced.\n     * @param {{string:string, string:string, ...}} replaceMap A map that indicates what substring should be replaced\n     * by which replacement string. E.g. {\"a\":\"b\", \"b\":\"c\"} would be the replacement map for the example at the top.\n     * @returns {string} The input string with the substrings replaced accordingly.\n     * */\n\n  }, {\n    key: \"_replaceMultiple\",\n    value: function _replaceMultiple(text, replaceRegex, replaceMap) {\n      return text.replace(replaceRegex, function (matchedSubstring) {\n        return replaceMap[matchedSubstring];\n      });\n    }\n  }]);\n\n  return InputToLatexConverter;\n}();\n\n\n\n//# sourceURL=webpack:///./source/mathEngine/stringInterpretation/InputToLatexConverter.js?");

/***/ }),

/***/ "./source/mathEngine/stringInterpretation/Interpreter.js":
/*!***************************************************************!*\
  !*** ./source/mathEngine/stringInterpretation/Interpreter.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Interpreter; });\n/* harmony import */ var mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mathEngine/imports.js */ \"./source/mathEngine/imports.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n/**\n * Class that is able to convert a math expression string in user-input-notation into a binary tree\n * consisting of ExpressionNodes. This tree can then be used to recursively calculate the result of the\n * expression.\n *\n * @author David Augustat\n * */\n\nvar Interpreter = /*#__PURE__*/function () {\n  /**\n   * Field on that the expressions should be interpreted\n   * @type{number} */\n\n  /**\n   * @param {number} field\n   * */\n  function Interpreter(field) {\n    _classCallCheck(this, Interpreter);\n\n    _defineProperty(this, \"field\", void 0);\n\n    _defineProperty(this, \"operatorsInCorrectOrder\", [mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Operators\"].ADD, mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Operators\"].SUBTRACT, mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Operators\"].MULTIPLY, mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Operators\"].DIVIDE, mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Operators\"].EXPONENTIATE, mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Operators\"].TERMINAL]);\n\n    this.field = field;\n  }\n  /**\n   * Infix-Operators in their correct processing order. The most significant operator must be the next-to-last one\n   * in the list. In this case the exponentiation operator is the most significant.\n   * The Operators.TERMINAL operator must always be the last element in the list, to indicate the interpreter, that\n   * no more significant operator exists.\n   * @type {[string]} */\n\n\n  _createClass(Interpreter, [{\n    key: \"interpret\",\n\n    /**\n     * Converts a lexically-correct mathematical expression in user-input-notation to a binary tree consisting of\n     * ExpressionNode objects. During the interpretation, several semantic rules will be checked (e.g. invalid field)\n     * and an exception will be thrown if this is the case.\n     *\n     * Note that the input expression must have been verified by the Parser.js class so that only lexically-correct\n     * expressions enter the interpreter. If lexically-incorrect expressions are interpreted, the interpreter might\n     * behave unintended.\n     *\n     * @param {string} expression The expression to interpret in user-input-notation\n     * @returns {ExpressionNode} Root-Node of an expression binary tree\n     * */\n    value: function interpret(expression) {\n      expression = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].removeSpacesAndLineBreaks(expression);\n\n      var expressionParts = this._tokenize(expression);\n\n      return this._interpretOperator(expressionParts, this.operatorsInCorrectOrder);\n    }\n    /**\n     * This operation recursively interprets a tokenized expression.\n     *\n     * If the provided tokenized expression array contains only a terminal (number, matrix, vector) a terminal node\n     * will be returned. Otherwise the expression array will be processed from left to right operator by operator.\n     * This method can thereby only process expressions in infix notations directly.\n     *\n     * Expressions with function operators are however supported as well. A (sub)expression with a function operator\n     * at the beginning (e.g. rowreduce) will be processed by the _interpretFunction method, which then uses this\n     * method again to interpret the expression inside the function operator brackets.\n     *\n     * @param {[string]} expression The tokenized expression. To tokenize the expression _tokenize method must be used.\n     * @param {[string]} operatorsList An array of the infix operators to use, in the correct order. The first operator\n     * in the list will be used by the current execution of this method. For following executions the array will\n     * internally be rotated, so that the next execution of this method operates on the next operator.\n     * @returns {ExpressionNode} The final expression note that is equivalent to the expression.\n     * */\n\n  }, {\n    key: \"_interpretOperator\",\n    value: function _interpretOperator(expression, operatorsList) {\n      var operator = operatorsList[0];\n\n      if (operator === mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Operators\"].TERMINAL) {\n        return this.interpret(expression[0]);\n      }\n\n      if (this._isValidNumber(expression)) {\n        return new mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"ExpressionNode\"](null, null, null, mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].getNumberFromNumberString(this.field, expression[0]));\n      } else if (this._isAnyNumber(expression)) {\n        throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].InvalidNumberException;\n      } else if (this._isMatrix(expression)) {\n        return new mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"ExpressionNode\"](null, null, null, mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Matrix\"].fromString(this.field, expression[0]));\n      } else if (this._isVector(expression)) {\n        return new mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"ExpressionNode\"](null, null, null, mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Vector\"].fromString(this.field, expression[0]));\n      } else if (this._isFunction(expression)) {\n        return this._interpretFunction(expression[0]);\n      }\n\n      if (this._expressionContainsOperator(expression, operator)) {\n        var expressionSeparatedByOperator = this._splitListByFirstOperatorOccurrence(expression, operator);\n\n        var expressionBeforeOperator = expressionSeparatedByOperator[0];\n        var expressionAfterOperator = expressionSeparatedByOperator[1];\n\n        var leftNode = this._interpretOperator(expressionBeforeOperator, this._getRotatedOperators(operatorsList));\n\n        var rightNode;\n\n        if (operator === mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Operators\"].EXPONENTIATE) {\n          // right node MUST be a real number. Therefore parse it using a real number interpreter:\n          rightNode = new Interpreter(mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].R)._interpretOperator(expressionAfterOperator, operatorsList);\n        } else {\n          rightNode = this._interpretOperator(expressionAfterOperator, operatorsList);\n        }\n\n        return new mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"ExpressionNode\"](leftNode, rightNode, operator, null);\n      }\n\n      return this._interpretOperator(expression, this._getRotatedOperators(operatorsList));\n    }\n    /**\n     * Internal method that decomposes the provided mathematical expression into an array of sub-expressions and\n     * operators.\n     *\n     * The method will first apply several pre-processors on the expressions:\n     * - convert all uppercase letters to lowercase\n     * - complete leading plus and minus operators, e.g. -5*4 becomes 0-5*4\n     * - complete omitted multiplication operators, e.g. 5(4+3) becomes 5*(4+3)\n     *\n     * Afterwards the operation will split the expression by all operators. Note that only the outermost\n     * layer of the expression will be split, therefore sub-expressions in brackets will not be touched.\n     *\n     * Function operators will stay attached to the parenthesis containing their parameter.\n     *\n     * Example:\n     * \"-5(4+3*(3-6))*rowreduce({1,2;3,4})*2\" will result in the output:\n     * [\"0\", \"-\", \"5\", \"4+3*(3-6)\", \"*\", \"rowreduce({1,2;3,4}\", \"*\", \"2\"]\n     *\n     * @param {string} expression The math expression to be tokenized\n     * @returns {[string]} An array of the individual tokens\n     * */\n\n  }, {\n    key: \"_tokenize\",\n    value: function _tokenize(expression) {\n      expression = expression.toLowerCase();\n      expression = this._completeLeadingPlusAndMinus(expression);\n      expression = this._completeOmittedMultiplicationOperator(expression);\n      var result = [];\n      var roundBracketLevel = 0;\n      var curlyBracketLevel = 0;\n      var squareBracketLevel = 0;\n      var lastSplitPosition = 0;\n      var functionStarting = false;\n\n      for (var i = 0; i < expression.length; i++) {\n        var currentChar = expression.charAt(i);\n\n        if (roundBracketLevel === 0 && curlyBracketLevel === 0 && squareBracketLevel === 0) {\n          if (this._isInfixOperator(currentChar)) {\n            result.push(expression.substring(lastSplitPosition, i));\n            result.push(currentChar);\n            lastSplitPosition = i + 1;\n          } else if (currentChar === '(' && !functionStarting) {\n            result.push(expression.substring(lastSplitPosition, i));\n            lastSplitPosition = i + 1;\n          } else if (currentChar === '(' && functionStarting) {\n            functionStarting = false;\n          } else if (this._startsWithFunctionOperator(expression, i)) {\n            result.push(expression.substring(lastSplitPosition, i));\n            functionStarting = true;\n          }\n        } else if (roundBracketLevel === 1 && curlyBracketLevel === 0 && squareBracketLevel === 0 && currentChar === ')') {\n          result.push(expression.substring(lastSplitPosition, i));\n          lastSplitPosition = i + 1;\n        }\n\n        if (currentChar === '(') {\n          roundBracketLevel++;\n        } else if (currentChar === ')') {\n          roundBracketLevel--;\n        } else if (currentChar === '{') {\n          curlyBracketLevel++;\n        } else if (currentChar === '}') {\n          curlyBracketLevel--;\n        } else if (currentChar === '[') {\n          squareBracketLevel++;\n        } else if (currentChar === ']') {\n          squareBracketLevel--;\n        }\n      }\n\n      result.push(expression.substring(lastSplitPosition));\n      result = this._removeEmptyElements(result);\n      return result;\n    }\n    /**\n     * Internal method that converts expressions wrapped into a function operator into a single-outgoing expression\n     * node.\n     *\n     * This expression node will contain the sub-expression from the parenthesis as the left sub-node.\n     * The function operator will be the operator of the expression node.\n     *\n     * Note that this method can only deal with input strings, that contain nothing else but a single expression\n     * wrapped into a function operator.\n     *\n     * E.g. \"rowreduce(5*{1,2;3,4})\" is a valid input.\n     *\n     * @param {String} expression\n     * @returns {ExpressionNode} The node of a binary tree containing the expression.\n     * */\n\n  }, {\n    key: \"_interpretFunction\",\n    value: function _interpretFunction(expression) {\n      var splitExpression = expression.split('(', 2);\n      var functionName = splitExpression[0];\n      var innerExpression = splitExpression[1];\n      var innerResult = this.interpret(innerExpression).calculate();\n      var innerResultNode = new mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"ExpressionNode\"](null, null, null, innerResult);\n      return new mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"ExpressionNode\"](innerResultNode, null, functionName, null);\n    }\n    /**\n     * Checks if the provided expression string starts with a function operator (e.g. rowreduce) at a given\n     * position in the string.\n     *\n     * @param {string} expression The expression to be checked.\n     * @param {number} startPosition The position in the string where the function operator should begin at\n     * @returns {boolean} True if the expression starts with a function operator at the given position. Otherwise\n     * false.\n     * */\n\n  }, {\n    key: \"_startsWithFunctionOperator\",\n    value: function _startsWithFunctionOperator(expression) {\n      var startPosition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Constants\"].functionOperators.some(function (operator) {\n        return expression.startsWith(operator, startPosition);\n      });\n    }\n    /**\n     * Checks if the provided string contains only an infix operator.\n     *\n     * @param {string} character\n     * @returns {boolean}\n     * */\n\n  }, {\n    key: \"_isInfixOperator\",\n    value: function _isInfixOperator(character) {\n      return mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Constants\"].infixOperators.includes(character);\n    }\n    /**\n     * Checks if a tokenized expression string array contains the given operator string as a direct element of the\n     * array. This does NOT check for operators contained in strings, that also hold other characters.\n     *\n     * E.g.\n     * [\"5\" \"-\" \"(4+3)\"] would return true because of the \"-\" operator.\n     * [\"(4+5)\"] would return false.\n     *\n     * @param {[string]} expression\n     * @param {string} operator\n     * @returns {boolean}\n     * */\n\n  }, {\n    key: \"_expressionContainsOperator\",\n    value: function _expressionContainsOperator(expression, operator) {\n      return expression.includes(operator);\n    }\n    /**\n     * Completes a leading \"-\" sign to \"0-\", so that it can be processed by the interpreter as a normal subtraction.\n     *\n     * E.g.\n     * -5+(3+4) becomes 0-5+(3+4)\n     *\n     * If the expression does not contain a leading minus, the output will be equal to the input.\n     *\n     * @param {string} expression\n     * @returns {string} expression with 0 attached before leading minus\n     */\n\n  }, {\n    key: \"_completeLeadingPlusAndMinus\",\n    value: function _completeLeadingPlusAndMinus(expression) {\n      if (expression.startsWith(mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Operators\"].SUBTRACT) || expression.startsWith(mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Operators\"].ADD)) {\n        return \"0\" + expression;\n      }\n\n      return expression;\n    }\n    /**\n     * Completes omitted \"*\" signs so that the interpreter understands it as a normal multiplication.\n     *\n     * E.g.\n     * 5(4+6) becomes 5*(4+6)\n     *\n     * If the expression does not have omitted multiplication signs, the output will be equal to the input.\n     *\n     * @param {string} expression\n     * @returns {string} expression\n     * */\n\n  }, {\n    key: \"_completeOmittedMultiplicationOperator\",\n    value: function _completeOmittedMultiplicationOperator(expression) {\n      var functionStarting = false;\n\n      for (var i = 0; i < expression.length; i++) {\n        var currentChar = expression.charAt(i);\n\n        if (this._startsWithFunctionOperator(expression, i)) {\n          functionStarting = true;\n        } else if (currentChar === '(' && functionStarting) {\n          functionStarting = false;\n        } else if (!functionStarting) {\n          expression = this._fixOmittedMultiplicationOperatorOnce(expression, i);\n        }\n      }\n\n      return expression;\n    }\n    /**\n     * Fixes a missing multiplication sign at one given position in the string and returns the corrected string.\n     *\n     * E.g. 5(4+5)(2+7) becomes 5(4+5)*(2+7) given that the startPosition is 5.\n     *\n     * If the expression doesn't have any missing multiplication problem at the provided position,\n     * the ouput will be equal to the input.\n     *\n     * @param {string} expression Expression that may contain a missing multiplication sign\n     * @param {number} startPosition Position which should be checked for a missing multiplication sign. This must be\n     * the position of the number or bracket BEFORE the missing multiplication sign.\n     * @returns {string} The string with an additional inserted multiplication sign if one was missing at the given\n     * position\n     * */\n\n  }, {\n    key: \"_fixOmittedMultiplicationOperatorOnce\",\n    value: function _fixOmittedMultiplicationOperatorOnce(expression) {\n      var startPosition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var expressionFromPosition = expression.substring(startPosition);\n\n      var possibilities = this._getOmittedMultiplicationOperatorPossibilities();\n\n      possibilities.forEach(function (possibility) {\n        if (expressionFromPosition.startsWith(possibility.value)) {\n          var expressionBeforePosition = expression.substring(0, startPosition);\n          var fixedExpressionFromPosition = expressionFromPosition.replace(possibility.value, possibility.replacement);\n          expression = expressionBeforePosition + fixedExpressionFromPosition;\n        }\n      });\n      return expression;\n    }\n    /**\n     * Returns an array of all possible character sequences in which a multiplication sign might have been omitted\n     * as well as a version of that sequence in which the multiplication sign has been added.\n     *\n     * @returns {[{value: string, replacement: string}]}\n     * */\n\n  }, {\n    key: \"_getOmittedMultiplicationOperatorPossibilities\",\n    value: function _getOmittedMultiplicationOperatorPossibilities() {\n      var possibilities = [{\n        value: ')(',\n        replacement: ')*('\n      }, {\n        value: '){',\n        replacement: ')*{'\n      }, {\n        value: ')[',\n        replacement: ')*['\n      }, {\n        value: '}(',\n        replacement: '}*('\n      }, {\n        value: '}{',\n        replacement: '}*{'\n      }, {\n        value: '}[',\n        replacement: '}*['\n      }, {\n        value: '](',\n        replacement: ']*('\n      }, {\n        value: ']{',\n        replacement: ']*{'\n      }, {\n        value: '][',\n        replacement: ']*['\n      }];\n      var fieldCharacters = [];\n\n      if (mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].isRealNumbersField(this.field)) {\n        fieldCharacters = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Constants\"].realNumberCharactersWithoutDot;\n      } else if (mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].isPrimeField(this.field)) {\n        fieldCharacters = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Constants\"].primeFieldNumberCharacters;\n      } else if (this.field === mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4) {\n        fieldCharacters = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Constants\"].f4NumberCharacters;\n      } else if (this.field === mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8) {\n        fieldCharacters = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Constants\"].f8NumberCharacters;\n      } else if (this.field === mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9) {\n        fieldCharacters = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Constants\"].f9NumberCharacters;\n      }\n\n      fieldCharacters.forEach(function (character) {\n        possibilities.push({\n          value: character + '(',\n          replacement: character + '*('\n        });\n        possibilities.push({\n          value: character + '{',\n          replacement: character + '*{'\n        });\n        possibilities.push({\n          value: character + '[',\n          replacement: character + '*['\n        });\n        possibilities.push({\n          value: ')' + character,\n          replacement: ')*' + character\n        });\n        possibilities.push({\n          value: '}' + character,\n          replacement: '}*' + character\n        });\n        possibilities.push({\n          value: ']' + character,\n          replacement: ']*' + character\n        });\n      });\n      return possibilities;\n    }\n    /**\n     * Removes all empty strings from a string array.\n     *\n     * @param {[string]} list\n     * @returns {[string]} list without empty elements\n     * */\n\n  }, {\n    key: \"_removeEmptyElements\",\n    value: function _removeEmptyElements(list) {\n      return list.filter(function (item) {\n        return item.length > 0;\n      });\n    }\n    /**\n     * Skims a string array for the first occurrence of string that contains only the provided operator symbol.\n     * When such an element is found, the array is split in two parts:\n     * - Part of the array before the operator\n     * - Part of the array after the operator\n     *\n     * These two part arrays are then returned as an array of string arrays. Note that the operator itself will not\n     * be contained in the result.\n     *\n     * @param {[string]} list Parts of the expression separated by operator symbols\n     * @param {string} operatorSymbol The operator to split by\n     * @returns {[[string]]} The two parts of the splitting contained in an outer array\n     * */\n\n  }, {\n    key: \"_splitListByFirstOperatorOccurrence\",\n    value: function _splitListByFirstOperatorOccurrence(list, operatorSymbol) {\n      var result = Array();\n\n      for (var i = 0; i < list.length; i++) {\n        if (list[i] === operatorSymbol) {\n          result.push(list.slice(0, i));\n          result.push(list.slice(i + 1));\n          break;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Checks if the provided array contains only one element which is a valid number over the field stored in\n     * this.field.\n     *\n     * @param {[string]} expression\n     * @returns boolean True if the expression is a valid number. Otherwise false.\n     * */\n\n  }, {\n    key: \"_isValidNumber\",\n    value: function _isValidNumber(expression) {\n      if (Array.isArray(expression) && expression.length === 1) {\n        return RegExp(mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].getRegexForField(this.field)).test(expression[0]);\n      }\n\n      return false;\n    }\n    /**\n     * Checks if the provided array contains only one element which is a valid matrix over the field stored in\n     * this.field.\n     *\n     * @param {[string]} expression\n     * @returns {boolean} True if the expression is a valid matrix. Otherwise false.\n     * */\n\n  }, {\n    key: \"_isMatrix\",\n    value: function _isMatrix(expression) {\n      if (Array.isArray(expression) && expression.length === 1) {\n        return RegExp(mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].getMatrixRegex(this.field)).test(expression[0]);\n      }\n\n      return false;\n    }\n    /**\n     * Checks if the provided array contains only one element which is a valid vector over the field stored in\n     * this.field.\n     *\n     * @param {[string]} expression\n     * @returns {boolean} True if the expression is a valid vector. Otherwise false.\n     * */\n\n  }, {\n    key: \"_isVector\",\n    value: function _isVector(expression) {\n      if (Array.isArray(expression) && expression.length === 1) {\n        return RegExp(mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].getVectorRegex(this.field)).test(expression[0]);\n      }\n\n      return false;\n    }\n    /**\n     * Checks if the given array contains only one element which is any number from any field.\n     *\n     * E.g. even when this.field == Field.R, this method will return true for 'a+1' because 'a+1' is a valid\n     * number from F4.\n     *\n     * @param {[string]} expression\n     * @returns {boolean} True if the expression is a valid number from any field. Otherwise false.\n     * */\n\n  }, {\n    key: \"_isAnyNumber\",\n    value: function _isAnyNumber(expression) {\n      if (Array.isArray(expression) && expression.length === 1) {\n        return RegExp(mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].getAnyNumberRegex()).test(expression[0]);\n      }\n\n      return false;\n    }\n    /**\n     *  Checks if the provided array contains only one element which is a valid function (e.g. rowreduce).\n     *\n     *  E.g. [\"rowreduce({1,2;3,4})\"] returns true, but [\"5*rowreduce({1,2;3,4})\"] or [\"5+6\"] returns false.\n     *\n     * @param {[string]} expression\n     * @returns {boolean} True if the expression is a valid function, otherwise false.\n     * */\n\n  }, {\n    key: \"_isFunction\",\n    value: function _isFunction(expression) {\n      if (Array.isArray(expression) && expression.length === 1) {\n        return this._startsWithFunctionOperator(expression[0], 0);\n      }\n\n      return false;\n    }\n    /**\n     * Shifts all elements in the provided array to the left by one element. The outer left element will become\n     * the last element in the array.\n     *\n     * @param {[string]} operatorList\n     * @returns {[string]}\n     * */\n\n  }, {\n    key: \"_getRotatedOperators\",\n    value: function _getRotatedOperators(operatorList) {\n      var rotatedList = operatorList.slice(1);\n      rotatedList.push(operatorList[0]);\n      return rotatedList;\n    }\n  }]);\n\n  return Interpreter;\n}();\n\n\n\n//# sourceURL=webpack:///./source/mathEngine/stringInterpretation/Interpreter.js?");

/***/ }),

/***/ "./source/mathEngine/stringInterpretation/Parser.js":
/*!**********************************************************!*\
  !*** ./source/mathEngine/stringInterpretation/Parser.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Parser; });\n/* harmony import */ var mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mathEngine/imports.js */ \"./source/mathEngine/imports.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n/**\n * A class that serves the purpose of checking if a mathematical expression is lexically correct.\n * Semantic errors are not checked however.\n *\n * @author David Augustat\n * */\n\nvar Parser = /*#__PURE__*/function () {\n  function Parser() {\n    _classCallCheck(this, Parser);\n  }\n\n  _createClass(Parser, [{\n    key: \"isValidMathExpression\",\n\n    /**\n     * Checks if text is a valid math expression. If not, an exception containing the approximate reason of failure\n     * will be thrown.\n     *\n     * Note: This method will only ever return true or throw an exception. It will never return false!\n     *\n     * Following criteria will be checked:\n     * - Is order and quantity of each bracket type correct?\n     * - Does text only contains valid numbers and characters?\n     *  Note: On Fields other than R, numbers in R will also be accepted at every position. This is because\n     *  real numbers must be allowed for exponentiation\n     *  - Invalid operator positions will be checked, e.g. multiplication sign at beginning, multiple operators\n     *  in series\n     *  - Are function operators (e.g. rowreduce) followed by opening round bracket?\n     *  - Do all matrices match the matrix regex for the given field?\n     *  - Do all vectors match the matrix regex for the given field?\n     *  - Are comma and semicolon used outside of matrices or vector?\n     *\n     * @param {number} field The field that is used in the expression\n     * @param {string} text The expression to be checked\n     * @returns {boolean} Returns true if the provided string matches every if the listed criteria. Otherwise false.\n     * */\n    value: function isValidMathExpression(field, text) {\n      text = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].removeSpacesAndLineBreaks(text);\n\n      if (!this._isValidBracketMatching(text)) {\n        throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].InvalidBracketsException;\n      }\n\n      if (!this._containsOnlyValidNumbersAndCharacters(field, text)) {\n        throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].InvalidNumbersOrCharactersException;\n      }\n\n      if (this._containsOperatorsAtWrongPosition(text)) {\n        throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].OperatorsAtInvalidPositionException;\n      }\n\n      if (!this._areFunctionOperatorsFollowedByBracket(text)) {\n        throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].FunctionOperatorNotFollowedByBracketException;\n      }\n\n      if (!this._areAllMatricesValid(field, text)) {\n        throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].InvalidMatrixException;\n      }\n\n      if (!this._areAllVectorsValid(field, text)) {\n        throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].InvalidVectorException;\n      }\n\n      if (this._commaAndSemicolonUsedOutsideMatrixAndVector(text)) {\n        throw mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Exceptions\"].CommaOrSemicolonOutsideOfMatrixAndVectorException;\n      }\n\n      return true;\n    }\n    /**\n     * Checks if the brackets are used in correct order and quantity in a provided math expression.\n     *\n     *  This simulates a pushdown automaton to check if the word is in the language of correct parenthesis.\n     *  Supported bracket types are (), {}, and [].\n     *\n     *  <a href=\"https://en.wikipedia.org/wiki/Pushdown_automaton\">Wikipedia / Pushdown automaton</a>\n     *\n     * @param {string} text The math expression to check\n     * @returns {boolean} True if all bracket types are used in correct order and quantity. Otherwise false.\n     * => True = Good\n     * */\n\n  }, {\n    key: \"_isValidBracketMatching\",\n    value: function _isValidBracketMatching(text) {\n      text = this._removeEveryThingButBrackets(text);\n      var characterStack = [];\n\n      for (var i = 0; i < text.length; i++) {\n        var currentChar = text.charAt(i);\n\n        if (mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].isOpeningBracket(currentChar)) {\n          characterStack.push(currentChar);\n        } else if (mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].isClosingBracket(currentChar)) {\n          var respectiveOpeningBracket = characterStack[characterStack.length - 1];\n\n          if (currentChar === ')' && respectiveOpeningBracket === '(' || currentChar === '}' && respectiveOpeningBracket === '{' || currentChar === ']' && respectiveOpeningBracket === '[') {\n            characterStack.pop();\n          } else {\n            return false;\n          }\n        }\n      }\n\n      return characterStack.length === 0;\n    }\n    /**\n     * Checks if only valid numbers and characters are used inside the expression.\n     *\n     * Valid characters are brackets (), {}, [], comma, semicolon, all operators (infix and function operators)\n     * as well as all real numbers and the numbers of the provided field.\n     *\n     * Note that real numbers are always allowed, because the exponent of an exponentiation must always be a real\n     * number.\n     *\n     * @param  {number} field The field to be used for the expression (except exponents)\n     * @param {string} text The math expression to check\n     * @returns {boolean} True if the expression only contains valid characters. Otherwise false.\n     * => True = Good\n     * */\n\n  }, {\n    key: \"_containsOnlyValidNumbersAndCharacters\",\n    value: function _containsOnlyValidNumbersAndCharacters(field, text) {\n      return this._getValidNumbersAndCharactersRegex(field).test(text.toLowerCase());\n    }\n    /**\n     * Checks for several syntax errors facing operators\n     *\n     * - Checks for invalid start operators: *, /, ^  (e.g. \"*5+5\")\n     * - Checks for invalid end operators: +, -, *, /, ^  (e.g. \"5+5+\")\n     * - Checks for invalid sequences including operators: (*, (/, (^, -), +), *), /), ^), ++, --, //, ^^,....  (e.g. (*5+5), 5++ )\n     *\n     * @param  {string} text The math expression to check\n     * @returns {boolean} True if an error facing operators at wrong position has been found. If the expression\n     * doesn't have such issues, false will be returned. => True = Bad\n     * */\n\n  }, {\n    key: \"_containsOperatorsAtWrongPosition\",\n    value: function _containsOperatorsAtWrongPosition(text) {\n      var invalidCharacterSequences = ['(*', '(/', '(^', '-)', '+)', '*)', '/)', '^)', '++', '+-', '+*', '+/', '+^', '-+', '--', '-*', '-/', '-^', '*+', '*-', '**', '*/', '*^', '/+', '/-', '/*', '//', '/^', '^+', '^-', '^*', '^/', '^^'];\n      var invalidStartCharacters = ['*', '/', '^'];\n      var invalidEndCharacters = ['+', '-', '*', '/', '^'];\n      var containsInvalidCharacterSequence = invalidCharacterSequences.some(function (invalidCharacterSequence) {\n        return text.includes(invalidCharacterSequence);\n      });\n      var containsInvalidStartCharacter = invalidStartCharacters.some(function (invalidStartCharacter) {\n        return text.startsWith(invalidStartCharacter);\n      });\n      var containsInvalidEndCharacter = invalidEndCharacters.some(function (invalidEndCharacter) {\n        return text.endsWith(invalidEndCharacter);\n      });\n      return containsInvalidCharacterSequence || containsInvalidStartCharacter || containsInvalidEndCharacter;\n    }\n    /**\n     * Checks if all function operators are followed by a round bracket.\n     *\n     * e.g. \"abs5+5\" or \"abs+5\" return false while abs(5+5) returns true\n     *\n     * Note that true will be returned, if no function operator is used.\n     *\n     * @param {string} text The math expression to check\n     * @returns {boolean} True if all function operators are followed by a round bracket or no function operator is\n     * used. If an issue facing this has been found, false will be returned. => True = Good\n     * */\n\n  }, {\n    key: \"_areFunctionOperatorsFollowedByBracket\",\n    value: function _areFunctionOperatorsFollowedByBracket(text) {\n      var functionOperatorsRegex = \"(\" + mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Constants\"].functionOperators.join(\"|\") + \")\";\n      var separatedByFunctionOperators = text.split(RegExp(functionOperatorsRegex)).filter(function (substring) {\n        return !mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Constants\"].functionOperators.includes(substring);\n      });\n      var expressionPartsWithoutFirst = separatedByFunctionOperators.slice(1);\n      return expressionPartsWithoutFirst.every(function (substring) {\n        return substring.startsWith('(');\n      });\n    }\n    /**\n     * Extracts all matrices (marked by curly brackets) from the expression and matches them against the\n     * matrix regex to check if they are valid.\n     *\n     * This method does NOT check if all rows have the same amount of columns!\n     * Note that true will be returned, when the expression does not contain any matrices.\n      *\n     * @param {number} field The field on which the matrix element numbers should be\n     * @param {string} text The expression to check\n     * @returns {boolean} True if all matrices are valid or no matrices are present. Otherwise false.\n     * => True = Good\n     * */\n\n  }, {\n    key: \"_areAllMatricesValid\",\n    value: function _areAllMatricesValid(field, text) {\n      var matrixStrings = [];\n      var lastOpeningCurlyBracketPosition = 0;\n      var insideMatrix = false;\n\n      for (var i = 0; i < text.length; i++) {\n        var currentChar = text.charAt(i);\n\n        if (currentChar === '{') {\n          if (insideMatrix) {\n            return false;\n          }\n\n          insideMatrix = true;\n          lastOpeningCurlyBracketPosition = i;\n        } else if (currentChar === '}') {\n          var matrixString = text.substring(lastOpeningCurlyBracketPosition, i + 1);\n          matrixStrings.push(matrixString);\n          insideMatrix = false;\n        }\n      }\n\n      var matrixRegex = RegExp(mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].getMatrixRegex(field));\n      return matrixStrings.every(function (matrixString) {\n        return matrixRegex.test(matrixString);\n      });\n    }\n    /**\n     * Extracts all vectors (marked by square brackets) from the expression and matches them against the\n     * vector regex to check if they are valid.\n     *\n     * Note that true will be returned, when the expression does not contain any vectors.\n     *\n     * @param {number} field The field on which the vector element numbers should be\n     * @param {string} text The expression to check.\n     * @returns {boolean} True if all vectors are valid or if no vectors are present. Otherwise false.\n     * => True = Good\n     * */\n\n  }, {\n    key: \"_areAllVectorsValid\",\n    value: function _areAllVectorsValid(field, text) {\n      var vectorStrings = [];\n      var lastOpeningSquareBracketPosition = 0;\n\n      for (var i = 0; i < text.length; i++) {\n        var currentChar = text.charAt(i);\n\n        if (currentChar === '[') {\n          lastOpeningSquareBracketPosition = i;\n        } else if (currentChar === ']') {\n          var vectorString = text.substring(lastOpeningSquareBracketPosition, i + 1);\n          vectorStrings.push(vectorString);\n        }\n      }\n\n      var vectorRegex = RegExp(mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].getVectorRegex(field));\n      return vectorStrings.every(function (vectorString) {\n        return vectorRegex.test(vectorString);\n      });\n    }\n    /**\n     * Checks if ',' or ';' are used outside of matrices of vectors (which they shouldn't).\n     *\n     * E.g. \"5,6*[1,2,3]\" returns true while \"5-6*[1,2,3]\" returns false.\n     *\n     * @param {string} text The expression to check\n     * @returns {boolean} True if ',' or ';' has been found outside of matrices or vectors. Otherwise false.\n     * => True = Bad\n     * */\n\n  }, {\n    key: \"_commaAndSemicolonUsedOutsideMatrixAndVector\",\n    value: function _commaAndSemicolonUsedOutsideMatrixAndVector(text) {\n      var commaAndSemicolon = [',', ';'];\n\n      var textWithoutMatricesAndVectors = this._removeMatrixAndVectorStrings(text);\n\n      return commaAndSemicolon.some(function (character) {\n        return textWithoutMatricesAndVectors.includes(character);\n      });\n    }\n    /**\n     * Removes all matrices and vectors from the provided expression.\n     *\n     * E.g. \"5*(3-5)*{1,2;3,4}*[1,2]\" becomes \"5*(3-5)**\"\n     *\n     * If the expression does not contain any matrices and vectors, the output will be equal to the input.\n     *\n     * @param {string} text The expression to process\n     * @returns {string} The expression with matrices and vectors removed\n     * */\n\n  }, {\n    key: \"_removeMatrixAndVectorStrings\",\n    value: function _removeMatrixAndVectorStrings(text) {\n      var simplifiedMatrixRegex = /{[\\S]*?}/g;\n      var simplifiedVectorRegex = /\\[[\\S]*?]/g;\n      var textWithoutMatrices = text.replace(simplifiedMatrixRegex, '');\n      return textWithoutMatrices.replace(simplifiedVectorRegex, '');\n    }\n    /**\n     * Removes everything except brackets (), {}, [] from a string.\n     *\n     * E.g. \"5*4*(rowreduce({1,2,3,4}))+{5,6;7,8}\" becomes \"(({})){}\".\n     *\n     * @param {string} text The expression to remove brackets from\n     * @returns {string} The expression with only brackets left.\n     * */\n\n  }, {\n    key: \"_removeEveryThingButBrackets\",\n    value: function _removeEveryThingButBrackets(text) {\n      var everyThingButBracketsRegex = /[^(){}\\[\\]]/g;\n      return text.replace(everyThingButBracketsRegex, '');\n    }\n    /**\n     * Compiles an array or all valid numbers an characters as regex parts for an mathematical expression over a\n     * given field.\n     *\n     * E.g. for field == Field.F4, following array is returned:\n     * [\",\", \";\", \"\\(\", \"\\)\", \"\\{\", \"\\}\", \"\\[\", \"\\]\", \"\\+\", \"-\", \"\\*\", \"\\^\", \"\\/\", \"rowreduce\", \"det\", \"abs\",\n     * \"((-)?([0-9]+\\.[0-9]+|[0-9]+))\", \"(0|1|a|a\\+1|1\\+a)\"]\n     *\n     * Note that real numbers are included as valid numbers for every field, because exponents must always be\n     * real numbers.\n     *\n     * @param {number} field The field to get the valid characters and numbers for.\n     * @returns {[string]} All regex parts that can be used to match valid characters and numbers\n     * */\n\n  }, {\n    key: \"_getValidNumbersAndCharacters\",\n    value: function _getValidNumbersAndCharacters(field) {\n      var _this = this;\n\n      var charactersUsedByAll = mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Constants\"].generalCharacters.concat(mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Constants\"].listOfAllOperators).map(function (character) {\n        return _this._escapeCharacterForUseInRegex(character);\n      }).concat(mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].getRealNumberRegex(false));\n\n      if (mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].isRealNumbersField(field)) {\n        return charactersUsedByAll;\n      } else if (mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].isPrimeField(field)) {\n        return charactersUsedByAll.concat(mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].getPrimeFieldRegex(false));\n      } else if (field === mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F4) {\n        return charactersUsedByAll.concat(mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].getF4Regex(false));\n      } else if (field === mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F8) {\n        return charactersUsedByAll.concat(mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].getF8Regex(false));\n      } else if (field === mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Field\"].F9) {\n        return charactersUsedByAll.concat(mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Helper\"].getF9Regex(false));\n      }\n    }\n    /**\n     * Creates a regex that matches all numbers and characters that are allowed in an mathematical expression over\n     * the given field.\n     *\n     * Note that real numbers are included in the regex for every field, because exponents must always be real numbers.\n     *\n     * @param {number} field The field to create the regex for\n     * @returns {RegExp} The regex that has been created\n     * */\n\n  }, {\n    key: \"_getValidNumbersAndCharactersRegex\",\n    value: function _getValidNumbersAndCharactersRegex(field) {\n      var validCharactersList = this._getValidNumbersAndCharacters(field);\n\n      var regexString = \"^(\";\n      regexString += validCharactersList.join('|');\n      regexString += \")+$\";\n      return RegExp(regexString);\n    }\n    /**\n     * Escapes special characters for use in regex strings.\n     *\n     * If no escaping is necessary for the provided character, the output will be equal to the input.\n     *\n     * @param {string} character The character without escaping\n     * @returns {string} The escaped version of the character.\n     * */\n\n  }, {\n    key: \"_escapeCharacterForUseInRegex\",\n    value: function _escapeCharacterForUseInRegex(character) {\n      return character.replace(/[.*+?^${}()|[\\]\\\\/]/g, '\\\\$&');\n    }\n  }]);\n\n  return Parser;\n}();\n\n\n\n//# sourceURL=webpack:///./source/mathEngine/stringInterpretation/Parser.js?");

/***/ }),

/***/ "./source/mathEngine/stringInterpretation/UserIoHandler.js":
/*!*****************************************************************!*\
  !*** ./source/mathEngine/stringInterpretation/UserIoHandler.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return UserIoHandler; });\n/* harmony import */ var mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mathEngine/imports.js */ \"./source/mathEngine/imports.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n/**\n * Class that handles the connection between the user interface and the math engine.\n *\n * This includes the validation, interpretation and calculation of a mathematical expresion string as well as the\n * feedback of the math engine to the UI including solution feedback and error feedback.\n *\n * @author David Augustat\n * */\n\nvar UserIoHandler = /*#__PURE__*/function () {\n  function UserIoHandler() {\n    _classCallCheck(this, UserIoHandler);\n  }\n\n  _createClass(UserIoHandler, [{\n    key: \"processCalculation\",\n\n    /**\n     * Handles the entire process of validating and evaluating the user input and calculating the result.\n     *\n     * Takes in a math expression entered by the user. The math expression is then checked for several\n     * lexical and syntactical errors by Parser.js.\n     * If the parser didn't find any errors, the string will be passed to the interpreter, which interprets the\n     * input and creates a tree structure consisting of TreeNode.js objects. The created tree is equivalent to\n     * the user input.\n     * When this tree has been created, it's mathematical solution is calculated recursively. The output of the\n     * calculated tree will be a MathElement which contains the final solution. This solution is then converted to\n     * a Latex string representation for outputting as well as a user input string representation that the user can\n     * use in another calculation.\n     * Additionally this method also generates a Latex representation of the user input, so that it can be displayed\n     * on screen along with the solution.\n     *\n     * If an error occurred during this whole process, an exception is thrown by the according module. This\n     * exception will be caught here and the error message is then included in the returned object.\n     *\n     * @param {number} field\n     * @param {string} input\n     * @returns {{isSuccessful: boolean, latexUserInput: string, latexResult: string, userInputResult: string,\n     * ?exception: Object}}\n     */\n    value: function processCalculation(field, input) {\n      try {\n        if (new mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Parser\"]().isValidMathExpression(field, input)) {\n          var resultNode = new mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"Interpreter\"](field).interpret(input);\n          var mathElementResult = resultNode.calculate();\n          var latexResult = mathElementResult.toLatex();\n          var userInputResult = mathElementResult.toUserInputString();\n          var latexUserInput = new mathEngine_imports_js__WEBPACK_IMPORTED_MODULE_0__[\"InputToLatexConverter\"]().toLatex(input);\n          return {\n            isSuccessful: true,\n            latexUserInput: latexUserInput,\n            latexResult: latexResult,\n            userInputResult: userInputResult,\n            exception: null\n          };\n        }\n      } catch (exception) {\n        return {\n          isSuccessful: false,\n          latexUserInput: \"\",\n          latexResult: \"\",\n          userInputResult: \"\",\n          exception: exception\n        };\n      }\n    }\n  }]);\n\n  return UserIoHandler;\n}();\n\n\n\n//# sourceURL=webpack:///./source/mathEngine/stringInterpretation/UserIoHandler.js?");

/***/ })

/******/ });